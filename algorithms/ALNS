{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e1d243e8",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0/200:0/4， best obj: 14502.0\n",
      "0/200:1/4， best obj: 14213.0\n",
      "0/200:2/4， best obj: 12876.0\n",
      "0/200:3/4， best obj: 12737.0\n",
      "1/200:0/4， best obj: 10700.0\n",
      "1/200:1/4， best obj: 10493.0\n",
      "1/200:2/4， best obj: 9853.0\n",
      "1/200:3/4， best obj: 9771.0\n",
      "2/200:0/4， best obj: 9771.0\n",
      "2/200:1/4， best obj: 9771.0\n",
      "2/200:2/4， best obj: 9718.0\n",
      "2/200:3/4， best obj: 9530.0\n",
      "3/200:0/4， best obj: 9462.0\n",
      "3/200:1/4， best obj: 9462.0\n",
      "3/200:2/4， best obj: 9337.0\n",
      "3/200:3/4， best obj: 9244.0\n",
      "4/200:0/4， best obj: 9196.0\n",
      "4/200:1/4， best obj: 9179.0\n",
      "4/200:2/4， best obj: 9179.0\n",
      "4/200:3/4， best obj: 9151.0\n",
      "5/200:0/4， best obj: 9066.0\n",
      "5/200:1/4， best obj: 9066.0\n",
      "5/200:2/4， best obj: 8990.0\n",
      "5/200:3/4， best obj: 8955.0\n",
      "6/200:0/4， best obj: 8873.0\n",
      "6/200:1/4， best obj: 8873.0\n",
      "6/200:2/4， best obj: 8866.0\n",
      "6/200:3/4， best obj: 8866.0\n",
      "7/200:0/4， best obj: 8866.0\n",
      "7/200:1/4， best obj: 8866.0\n",
      "7/200:2/4， best obj: 8866.0\n",
      "7/200:3/4， best obj: 8866.0\n",
      "8/200:0/4， best obj: 8866.0\n",
      "8/200:1/4， best obj: 8866.0\n",
      "8/200:2/4， best obj: 8866.0\n",
      "8/200:3/4， best obj: 8866.0\n",
      "9/200:0/4， best obj: 8866.0\n",
      "9/200:1/4， best obj: 8866.0\n",
      "9/200:2/4， best obj: 8866.0\n",
      "9/200:3/4， best obj: 8866.0\n",
      "10/200:0/4， best obj: 8866.0\n",
      "10/200:1/4， best obj: 8866.0\n",
      "10/200:2/4， best obj: 8866.0\n",
      "10/200:3/4， best obj: 8866.0\n",
      "11/200:0/4， best obj: 8866.0\n",
      "11/200:1/4， best obj: 8866.0\n",
      "11/200:2/4， best obj: 8866.0\n",
      "11/200:3/4， best obj: 8866.0\n",
      "12/200:0/4， best obj: 8866.0\n",
      "12/200:1/4， best obj: 8866.0\n",
      "12/200:2/4， best obj: 8866.0\n",
      "12/200:3/4， best obj: 8866.0\n",
      "13/200:0/4， best obj: 8866.0\n",
      "13/200:1/4， best obj: 8866.0\n",
      "13/200:2/4， best obj: 8866.0\n",
      "13/200:3/4， best obj: 8866.0\n",
      "14/200:0/4， best obj: 8866.0\n",
      "14/200:1/4， best obj: 8866.0\n",
      "14/200:2/4， best obj: 8866.0\n",
      "14/200:3/4， best obj: 8866.0\n",
      "15/200:0/4， best obj: 8866.0\n",
      "15/200:1/4， best obj: 8866.0\n",
      "15/200:2/4， best obj: 8866.0\n",
      "15/200:3/4， best obj: 8866.0\n",
      "16/200:0/4， best obj: 8866.0\n",
      "16/200:1/4， best obj: 8866.0\n",
      "16/200:2/4， best obj: 8866.0\n",
      "16/200:3/4， best obj: 8866.0\n",
      "17/200:0/4， best obj: 8866.0\n",
      "17/200:1/4， best obj: 8866.0\n",
      "17/200:2/4， best obj: 8866.0\n",
      "17/200:3/4， best obj: 8866.0\n",
      "18/200:0/4， best obj: 8866.0\n",
      "18/200:1/4， best obj: 8866.0\n",
      "18/200:2/4， best obj: 8866.0\n",
      "18/200:3/4， best obj: 8866.0\n",
      "19/200:0/4， best obj: 8866.0\n",
      "19/200:1/4， best obj: 8866.0\n",
      "19/200:2/4， best obj: 8866.0\n",
      "19/200:3/4， best obj: 8866.0\n",
      "20/200:0/4， best obj: 8866.0\n",
      "20/200:1/4， best obj: 8866.0\n",
      "20/200:2/4， best obj: 8866.0\n",
      "20/200:3/4， best obj: 8866.0\n",
      "21/200:0/4， best obj: 8866.0\n",
      "21/200:1/4， best obj: 8866.0\n",
      "21/200:2/4， best obj: 8866.0\n",
      "21/200:3/4， best obj: 8866.0\n",
      "22/200:0/4， best obj: 8866.0\n",
      "22/200:1/4， best obj: 8866.0\n",
      "22/200:2/4， best obj: 8866.0\n",
      "22/200:3/4， best obj: 8866.0\n",
      "23/200:0/4， best obj: 8866.0\n",
      "23/200:1/4， best obj: 8866.0\n",
      "23/200:2/4， best obj: 8866.0\n",
      "23/200:3/4， best obj: 8866.0\n",
      "24/200:0/4， best obj: 8866.0\n",
      "24/200:1/4， best obj: 8866.0\n",
      "24/200:2/4， best obj: 8866.0\n",
      "24/200:3/4， best obj: 8866.0\n",
      "25/200:0/4， best obj: 8866.0\n",
      "25/200:1/4， best obj: 8866.0\n",
      "25/200:2/4， best obj: 8866.0\n",
      "25/200:3/4， best obj: 8866.0\n",
      "26/200:0/4， best obj: 8866.0\n",
      "26/200:1/4， best obj: 8866.0\n",
      "26/200:2/4， best obj: 8866.0\n",
      "26/200:3/4， best obj: 8866.0\n",
      "27/200:0/4， best obj: 8866.0\n",
      "27/200:1/4， best obj: 8866.0\n",
      "27/200:2/4， best obj: 8866.0\n",
      "27/200:3/4， best obj: 8866.0\n",
      "28/200:0/4， best obj: 8866.0\n",
      "28/200:1/4， best obj: 8866.0\n",
      "28/200:2/4， best obj: 8866.0\n",
      "28/200:3/4， best obj: 8866.0\n",
      "29/200:0/4， best obj: 8866.0\n",
      "29/200:1/4， best obj: 8866.0\n",
      "29/200:2/4， best obj: 8866.0\n",
      "29/200:3/4， best obj: 8866.0\n",
      "30/200:0/4， best obj: 8866.0\n",
      "30/200:1/4， best obj: 8866.0\n",
      "30/200:2/4， best obj: 8866.0\n",
      "30/200:3/4， best obj: 8866.0\n",
      "31/200:0/4， best obj: 8866.0\n",
      "31/200:1/4， best obj: 8866.0\n",
      "31/200:2/4， best obj: 8866.0\n",
      "31/200:3/4， best obj: 8866.0\n",
      "32/200:0/4， best obj: 8866.0\n",
      "32/200:1/4， best obj: 8866.0\n",
      "32/200:2/4， best obj: 8866.0\n",
      "32/200:3/4， best obj: 8866.0\n",
      "33/200:0/4， best obj: 8866.0\n",
      "33/200:1/4， best obj: 8866.0\n",
      "33/200:2/4， best obj: 8866.0\n",
      "33/200:3/4， best obj: 8866.0\n",
      "34/200:0/4， best obj: 8866.0\n",
      "34/200:1/4， best obj: 8866.0\n",
      "34/200:2/4， best obj: 8866.0\n",
      "34/200:3/4， best obj: 8866.0\n",
      "35/200:0/4， best obj: 8866.0\n",
      "35/200:1/4， best obj: 8866.0\n",
      "35/200:2/4， best obj: 8866.0\n",
      "35/200:3/4， best obj: 8866.0\n",
      "36/200:0/4， best obj: 8866.0\n",
      "36/200:1/4， best obj: 8866.0\n",
      "36/200:2/4， best obj: 8866.0\n",
      "36/200:3/4， best obj: 8866.0\n",
      "37/200:0/4， best obj: 8866.0\n",
      "37/200:1/4， best obj: 8866.0\n",
      "37/200:2/4， best obj: 8866.0\n",
      "37/200:3/4， best obj: 8866.0\n",
      "38/200:0/4， best obj: 8866.0\n",
      "38/200:1/4， best obj: 8866.0\n",
      "38/200:2/4， best obj: 8866.0\n",
      "38/200:3/4， best obj: 8866.0\n",
      "39/200:0/4， best obj: 8866.0\n",
      "39/200:1/4， best obj: 8866.0\n",
      "39/200:2/4， best obj: 8866.0\n",
      "39/200:3/4， best obj: 8866.0\n",
      "40/200:0/4， best obj: 8866.0\n",
      "40/200:1/4， best obj: 8866.0\n",
      "40/200:2/4， best obj: 8866.0\n",
      "40/200:3/4， best obj: 8866.0\n",
      "41/200:0/4， best obj: 8866.0\n",
      "41/200:1/4， best obj: 8866.0\n",
      "41/200:2/4， best obj: 8866.0\n",
      "41/200:3/4， best obj: 8866.0\n",
      "42/200:0/4， best obj: 8866.0\n",
      "42/200:1/4， best obj: 8866.0\n",
      "42/200:2/4， best obj: 8866.0\n",
      "42/200:3/4， best obj: 8866.0\n",
      "43/200:0/4， best obj: 8866.0\n",
      "43/200:1/4， best obj: 8866.0\n",
      "43/200:2/4， best obj: 8866.0\n",
      "43/200:3/4， best obj: 8866.0\n",
      "44/200:0/4， best obj: 8866.0\n",
      "44/200:1/4， best obj: 8866.0\n",
      "44/200:2/4， best obj: 8866.0\n",
      "44/200:3/4， best obj: 8866.0\n",
      "45/200:0/4， best obj: 8866.0\n",
      "45/200:1/4， best obj: 8866.0\n",
      "45/200:2/4， best obj: 8866.0\n",
      "45/200:3/4， best obj: 8866.0\n",
      "46/200:0/4， best obj: 8866.0\n",
      "46/200:1/4， best obj: 8866.0\n",
      "46/200:2/4， best obj: 8866.0\n",
      "46/200:3/4， best obj: 8866.0\n",
      "47/200:0/4， best obj: 8866.0\n",
      "47/200:1/4， best obj: 8866.0\n",
      "47/200:2/4， best obj: 8866.0\n",
      "47/200:3/4， best obj: 8866.0\n",
      "48/200:0/4， best obj: 8866.0\n",
      "48/200:1/4， best obj: 8866.0\n",
      "48/200:2/4， best obj: 8866.0\n",
      "48/200:3/4， best obj: 8866.0\n",
      "49/200:0/4， best obj: 8866.0\n",
      "49/200:1/4， best obj: 8866.0\n",
      "49/200:2/4， best obj: 8866.0\n",
      "49/200:3/4， best obj: 8866.0\n",
      "50/200:0/4， best obj: 8866.0\n",
      "50/200:1/4， best obj: 8866.0\n",
      "50/200:2/4， best obj: 8866.0\n",
      "50/200:3/4， best obj: 8866.0\n",
      "51/200:0/4， best obj: 8866.0\n",
      "51/200:1/4， best obj: 8866.0\n",
      "51/200:2/4， best obj: 8866.0\n",
      "51/200:3/4， best obj: 8866.0\n",
      "52/200:0/4， best obj: 8866.0\n",
      "52/200:1/4， best obj: 8866.0\n",
      "52/200:2/4， best obj: 8866.0\n",
      "52/200:3/4， best obj: 8866.0\n",
      "53/200:0/4， best obj: 8866.0\n",
      "53/200:1/4， best obj: 8866.0\n",
      "53/200:2/4， best obj: 8866.0\n",
      "53/200:3/4， best obj: 8866.0\n",
      "54/200:0/4， best obj: 8866.0\n",
      "54/200:1/4， best obj: 8866.0\n",
      "54/200:2/4， best obj: 8866.0\n",
      "54/200:3/4， best obj: 8866.0\n",
      "55/200:0/4， best obj: 8866.0\n",
      "55/200:1/4， best obj: 8866.0\n",
      "55/200:2/4， best obj: 8866.0\n",
      "55/200:3/4， best obj: 8866.0\n",
      "56/200:0/4， best obj: 8866.0\n",
      "56/200:1/4， best obj: 8866.0\n",
      "56/200:2/4， best obj: 8866.0\n",
      "56/200:3/4， best obj: 8866.0\n",
      "57/200:0/4， best obj: 8866.0\n",
      "57/200:1/4， best obj: 8866.0\n",
      "57/200:2/4， best obj: 8866.0\n",
      "57/200:3/4， best obj: 8866.0\n",
      "58/200:0/4， best obj: 8866.0\n",
      "58/200:1/4， best obj: 8866.0\n",
      "58/200:2/4， best obj: 8866.0\n",
      "58/200:3/4， best obj: 8866.0\n",
      "59/200:0/4， best obj: 8866.0\n",
      "59/200:1/4， best obj: 8866.0\n",
      "59/200:2/4， best obj: 8866.0\n",
      "59/200:3/4， best obj: 8866.0\n",
      "60/200:0/4， best obj: 8866.0\n",
      "60/200:1/4， best obj: 8866.0\n",
      "60/200:2/4， best obj: 8866.0\n",
      "60/200:3/4， best obj: 8866.0\n",
      "61/200:0/4， best obj: 8866.0\n",
      "61/200:1/4， best obj: 8866.0\n",
      "61/200:2/4， best obj: 8866.0\n",
      "61/200:3/4， best obj: 8866.0\n",
      "62/200:0/4， best obj: 8866.0\n",
      "62/200:1/4， best obj: 8866.0\n",
      "62/200:2/4， best obj: 8866.0\n",
      "62/200:3/4， best obj: 8866.0\n",
      "63/200:0/4， best obj: 8866.0\n",
      "63/200:1/4， best obj: 8866.0\n",
      "63/200:2/4， best obj: 8866.0\n",
      "63/200:3/4， best obj: 8866.0\n",
      "64/200:0/4， best obj: 8866.0\n",
      "64/200:1/4， best obj: 8866.0\n",
      "64/200:2/4， best obj: 8866.0\n",
      "64/200:3/4， best obj: 8866.0\n",
      "65/200:0/4， best obj: 8866.0\n",
      "65/200:1/4， best obj: 8866.0\n",
      "65/200:2/4， best obj: 8866.0\n",
      "65/200:3/4， best obj: 8866.0\n",
      "66/200:0/4， best obj: 8866.0\n",
      "66/200:1/4， best obj: 8866.0\n",
      "66/200:2/4， best obj: 8866.0\n",
      "66/200:3/4， best obj: 8866.0\n",
      "67/200:0/4， best obj: 8866.0\n",
      "67/200:1/4， best obj: 8866.0\n",
      "67/200:2/4， best obj: 8866.0\n",
      "67/200:3/4， best obj: 8866.0\n",
      "68/200:0/4， best obj: 8866.0\n",
      "68/200:1/4， best obj: 8866.0\n",
      "68/200:2/4， best obj: 8866.0\n",
      "68/200:3/4， best obj: 8866.0\n",
      "69/200:0/4， best obj: 8866.0\n",
      "69/200:1/4， best obj: 8866.0\n",
      "69/200:2/4， best obj: 8866.0\n",
      "69/200:3/4， best obj: 8866.0\n",
      "70/200:0/4， best obj: 8866.0\n",
      "70/200:1/4， best obj: 8866.0\n",
      "70/200:2/4， best obj: 8866.0\n",
      "70/200:3/4， best obj: 8866.0\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "71/200:0/4， best obj: 8866.0\n",
      "71/200:1/4， best obj: 8866.0\n",
      "71/200:2/4， best obj: 8866.0\n",
      "71/200:3/4， best obj: 8866.0\n",
      "72/200:0/4， best obj: 8866.0\n",
      "72/200:1/4， best obj: 8866.0\n",
      "72/200:2/4， best obj: 8866.0\n",
      "72/200:3/4， best obj: 8866.0\n",
      "73/200:0/4， best obj: 8866.0\n",
      "73/200:1/4， best obj: 8866.0\n",
      "73/200:2/4， best obj: 8866.0\n",
      "73/200:3/4， best obj: 8866.0\n",
      "74/200:0/4， best obj: 8866.0\n",
      "74/200:1/4， best obj: 8866.0\n",
      "74/200:2/4， best obj: 8866.0\n",
      "74/200:3/4， best obj: 8866.0\n",
      "75/200:0/4， best obj: 8866.0\n",
      "75/200:1/4， best obj: 8866.0\n",
      "75/200:2/4， best obj: 8866.0\n",
      "75/200:3/4， best obj: 8866.0\n",
      "76/200:0/4， best obj: 8866.0\n",
      "76/200:1/4， best obj: 8866.0\n",
      "76/200:2/4， best obj: 8866.0\n",
      "76/200:3/4， best obj: 8866.0\n",
      "77/200:0/4， best obj: 8866.0\n",
      "77/200:1/4， best obj: 8866.0\n",
      "77/200:2/4， best obj: 8866.0\n",
      "77/200:3/4， best obj: 8866.0\n",
      "78/200:0/4， best obj: 8866.0\n",
      "78/200:1/4， best obj: 8866.0\n",
      "78/200:2/4， best obj: 8866.0\n",
      "78/200:3/4， best obj: 8866.0\n",
      "79/200:0/4， best obj: 8866.0\n",
      "79/200:1/4， best obj: 8866.0\n",
      "79/200:2/4， best obj: 8866.0\n",
      "79/200:3/4， best obj: 8866.0\n",
      "80/200:0/4， best obj: 8866.0\n",
      "80/200:1/4， best obj: 8866.0\n",
      "80/200:2/4， best obj: 8866.0\n",
      "80/200:3/4， best obj: 8866.0\n",
      "81/200:0/4， best obj: 8866.0\n",
      "81/200:1/4， best obj: 8866.0\n",
      "81/200:2/4， best obj: 8866.0\n",
      "81/200:3/4， best obj: 8866.0\n",
      "82/200:0/4， best obj: 8866.0\n",
      "82/200:1/4， best obj: 8866.0\n",
      "82/200:2/4， best obj: 8866.0\n",
      "82/200:3/4， best obj: 8866.0\n",
      "83/200:0/4， best obj: 8866.0\n",
      "83/200:1/4， best obj: 8866.0\n",
      "83/200:2/4， best obj: 8866.0\n",
      "83/200:3/4， best obj: 8866.0\n",
      "84/200:0/4， best obj: 8866.0\n",
      "84/200:1/4， best obj: 8866.0\n",
      "84/200:2/4， best obj: 8866.0\n",
      "84/200:3/4， best obj: 8866.0\n",
      "85/200:0/4， best obj: 8866.0\n",
      "85/200:1/4， best obj: 8866.0\n",
      "85/200:2/4， best obj: 8866.0\n",
      "85/200:3/4， best obj: 8866.0\n",
      "86/200:0/4， best obj: 8866.0\n",
      "86/200:1/4， best obj: 8866.0\n",
      "86/200:2/4， best obj: 8866.0\n",
      "86/200:3/4， best obj: 8866.0\n",
      "87/200:0/4， best obj: 8866.0\n",
      "87/200:1/4， best obj: 8866.0\n",
      "87/200:2/4， best obj: 8866.0\n",
      "87/200:3/4， best obj: 8866.0\n",
      "88/200:0/4， best obj: 8866.0\n",
      "88/200:1/4， best obj: 8866.0\n",
      "88/200:2/4， best obj: 8866.0\n",
      "88/200:3/4， best obj: 8866.0\n",
      "89/200:0/4， best obj: 8866.0\n",
      "89/200:1/4， best obj: 8866.0\n",
      "89/200:2/4， best obj: 8866.0\n",
      "89/200:3/4， best obj: 8866.0\n",
      "90/200:0/4， best obj: 8866.0\n",
      "90/200:1/4， best obj: 8866.0\n",
      "90/200:2/4， best obj: 8866.0\n",
      "90/200:3/4， best obj: 8866.0\n",
      "91/200:0/4， best obj: 8866.0\n",
      "91/200:1/4， best obj: 8866.0\n",
      "91/200:2/4， best obj: 8866.0\n",
      "91/200:3/4， best obj: 8866.0\n",
      "92/200:0/4， best obj: 8866.0\n",
      "92/200:1/4， best obj: 8866.0\n",
      "92/200:2/4， best obj: 8866.0\n",
      "92/200:3/4， best obj: 8866.0\n",
      "93/200:0/4， best obj: 8866.0\n",
      "93/200:1/4， best obj: 8866.0\n",
      "93/200:2/4， best obj: 8866.0\n",
      "93/200:3/4， best obj: 8866.0\n",
      "94/200:0/4， best obj: 8866.0\n",
      "94/200:1/4， best obj: 8866.0\n",
      "94/200:2/4， best obj: 8866.0\n",
      "94/200:3/4， best obj: 8866.0\n",
      "95/200:0/4， best obj: 8866.0\n",
      "95/200:1/4， best obj: 8866.0\n",
      "95/200:2/4， best obj: 8866.0\n",
      "95/200:3/4， best obj: 8866.0\n",
      "96/200:0/4， best obj: 8866.0\n",
      "96/200:1/4， best obj: 8866.0\n",
      "96/200:2/4， best obj: 8866.0\n",
      "96/200:3/4， best obj: 8866.0\n",
      "97/200:0/4， best obj: 8866.0\n",
      "97/200:1/4， best obj: 8866.0\n",
      "97/200:2/4， best obj: 8866.0\n",
      "97/200:3/4， best obj: 8866.0\n",
      "98/200:0/4， best obj: 8866.0\n",
      "98/200:1/4， best obj: 8866.0\n",
      "98/200:2/4， best obj: 8866.0\n",
      "98/200:3/4， best obj: 8866.0\n",
      "99/200:0/4， best obj: 8866.0\n",
      "99/200:1/4， best obj: 8866.0\n",
      "99/200:2/4， best obj: 8866.0\n",
      "99/200:3/4， best obj: 8866.0\n",
      "100/200:0/4， best obj: 8866.0\n",
      "100/200:1/4， best obj: 8866.0\n",
      "100/200:2/4， best obj: 8866.0\n",
      "100/200:3/4， best obj: 8866.0\n",
      "101/200:0/4， best obj: 8866.0\n",
      "101/200:1/4， best obj: 8866.0\n",
      "101/200:2/4， best obj: 8866.0\n",
      "101/200:3/4， best obj: 8866.0\n",
      "102/200:0/4， best obj: 8866.0\n",
      "102/200:1/4， best obj: 8866.0\n",
      "102/200:2/4， best obj: 8866.0\n",
      "102/200:3/4， best obj: 8866.0\n",
      "103/200:0/4， best obj: 8866.0\n",
      "103/200:1/4， best obj: 8866.0\n",
      "103/200:2/4， best obj: 8866.0\n",
      "103/200:3/4， best obj: 8866.0\n",
      "104/200:0/4， best obj: 8866.0\n",
      "104/200:1/4， best obj: 8866.0\n",
      "104/200:2/4， best obj: 8866.0\n",
      "104/200:3/4， best obj: 8866.0\n",
      "105/200:0/4， best obj: 8866.0\n",
      "105/200:1/4， best obj: 8866.0\n",
      "105/200:2/4， best obj: 8866.0\n",
      "105/200:3/4， best obj: 8866.0\n",
      "106/200:0/4， best obj: 8866.0\n",
      "106/200:1/4， best obj: 8866.0\n",
      "106/200:2/4， best obj: 8866.0\n",
      "106/200:3/4， best obj: 8866.0\n",
      "107/200:0/4， best obj: 8866.0\n",
      "107/200:1/4， best obj: 8866.0\n",
      "107/200:2/4， best obj: 8866.0\n",
      "107/200:3/4， best obj: 8866.0\n",
      "108/200:0/4， best obj: 8866.0\n",
      "108/200:1/4， best obj: 8866.0\n",
      "108/200:2/4， best obj: 8866.0\n",
      "108/200:3/4， best obj: 8866.0\n",
      "109/200:0/4， best obj: 8866.0\n",
      "109/200:1/4， best obj: 8866.0\n",
      "109/200:2/4， best obj: 8866.0\n",
      "109/200:3/4， best obj: 8866.0\n",
      "110/200:0/4， best obj: 8866.0\n",
      "110/200:1/4， best obj: 8866.0\n",
      "110/200:2/4， best obj: 8866.0\n",
      "110/200:3/4， best obj: 8866.0\n",
      "111/200:0/4， best obj: 8866.0\n",
      "111/200:1/4， best obj: 8866.0\n",
      "111/200:2/4， best obj: 8866.0\n",
      "111/200:3/4， best obj: 8866.0\n",
      "112/200:0/4， best obj: 8866.0\n",
      "112/200:1/4， best obj: 8866.0\n",
      "112/200:2/4， best obj: 8866.0\n",
      "112/200:3/4， best obj: 8866.0\n",
      "113/200:0/4， best obj: 8866.0\n",
      "113/200:1/4， best obj: 8866.0\n",
      "113/200:2/4， best obj: 8866.0\n",
      "113/200:3/4， best obj: 8866.0\n",
      "114/200:0/4， best obj: 8866.0\n",
      "114/200:1/4， best obj: 8866.0\n",
      "114/200:2/4， best obj: 8866.0\n",
      "114/200:3/4， best obj: 8866.0\n",
      "115/200:0/4， best obj: 8866.0\n",
      "115/200:1/4， best obj: 8866.0\n",
      "115/200:2/4， best obj: 8866.0\n",
      "115/200:3/4， best obj: 8866.0\n",
      "116/200:0/4， best obj: 8866.0\n",
      "116/200:1/4， best obj: 8866.0\n",
      "116/200:2/4， best obj: 8866.0\n",
      "116/200:3/4， best obj: 8866.0\n",
      "117/200:0/4， best obj: 8866.0\n",
      "117/200:1/4， best obj: 8866.0\n",
      "117/200:2/4， best obj: 8866.0\n",
      "117/200:3/4， best obj: 8866.0\n",
      "118/200:0/4， best obj: 8866.0\n",
      "118/200:1/4， best obj: 8866.0\n",
      "118/200:2/4， best obj: 8866.0\n",
      "118/200:3/4， best obj: 8866.0\n",
      "119/200:0/4， best obj: 8866.0\n",
      "119/200:1/4， best obj: 8866.0\n",
      "119/200:2/4， best obj: 8866.0\n",
      "119/200:3/4， best obj: 8866.0\n",
      "120/200:0/4， best obj: 8866.0\n",
      "120/200:1/4， best obj: 8866.0\n",
      "120/200:2/4， best obj: 8866.0\n",
      "120/200:3/4， best obj: 8866.0\n",
      "121/200:0/4， best obj: 8866.0\n",
      "121/200:1/4， best obj: 8866.0\n",
      "121/200:2/4， best obj: 8866.0\n",
      "121/200:3/4， best obj: 8866.0\n",
      "122/200:0/4， best obj: 8866.0\n",
      "122/200:1/4， best obj: 8866.0\n",
      "122/200:2/4， best obj: 8866.0\n",
      "122/200:3/4， best obj: 8866.0\n",
      "123/200:0/4， best obj: 8866.0\n",
      "123/200:1/4， best obj: 8866.0\n",
      "123/200:2/4， best obj: 8866.0\n",
      "123/200:3/4， best obj: 8866.0\n",
      "124/200:0/4， best obj: 8866.0\n",
      "124/200:1/4， best obj: 8866.0\n",
      "124/200:2/4， best obj: 8866.0\n",
      "124/200:3/4， best obj: 8866.0\n",
      "125/200:0/4， best obj: 8866.0\n",
      "125/200:1/4， best obj: 8866.0\n",
      "125/200:2/4， best obj: 8866.0\n",
      "125/200:3/4， best obj: 8866.0\n",
      "126/200:0/4， best obj: 8866.0\n",
      "126/200:1/4， best obj: 8866.0\n",
      "126/200:2/4， best obj: 8866.0\n",
      "126/200:3/4， best obj: 8866.0\n",
      "127/200:0/4， best obj: 8866.0\n",
      "127/200:1/4， best obj: 8866.0\n",
      "127/200:2/4， best obj: 8866.0\n",
      "127/200:3/4， best obj: 8866.0\n",
      "128/200:0/4， best obj: 8866.0\n",
      "128/200:1/4， best obj: 8866.0\n",
      "128/200:2/4， best obj: 8866.0\n",
      "128/200:3/4， best obj: 8866.0\n",
      "129/200:0/4， best obj: 8866.0\n",
      "129/200:1/4， best obj: 8866.0\n",
      "129/200:2/4， best obj: 8866.0\n",
      "129/200:3/4， best obj: 8866.0\n",
      "130/200:0/4， best obj: 8866.0\n",
      "130/200:1/4， best obj: 8866.0\n",
      "130/200:2/4， best obj: 8866.0\n",
      "130/200:3/4， best obj: 8866.0\n",
      "131/200:0/4， best obj: 8866.0\n",
      "131/200:1/4， best obj: 8866.0\n",
      "131/200:2/4， best obj: 8866.0\n",
      "131/200:3/4， best obj: 8866.0\n",
      "132/200:0/4， best obj: 8866.0\n",
      "132/200:1/4， best obj: 8866.0\n",
      "132/200:2/4， best obj: 8866.0\n",
      "132/200:3/4， best obj: 8866.0\n",
      "133/200:0/4， best obj: 8866.0\n",
      "133/200:1/4， best obj: 8866.0\n",
      "133/200:2/4， best obj: 8866.0\n",
      "133/200:3/4， best obj: 8866.0\n",
      "134/200:0/4， best obj: 8866.0\n",
      "134/200:1/4， best obj: 8866.0\n",
      "134/200:2/4， best obj: 8866.0\n",
      "134/200:3/4， best obj: 8866.0\n",
      "135/200:0/4， best obj: 8866.0\n",
      "135/200:1/4， best obj: 8866.0\n",
      "135/200:2/4， best obj: 8866.0\n",
      "135/200:3/4， best obj: 8866.0\n",
      "136/200:0/4， best obj: 8866.0\n",
      "136/200:1/4， best obj: 8866.0\n",
      "136/200:2/4， best obj: 8866.0\n",
      "136/200:3/4， best obj: 8866.0\n",
      "137/200:0/4， best obj: 8866.0\n",
      "137/200:1/4， best obj: 8866.0\n",
      "137/200:2/4， best obj: 8866.0\n",
      "137/200:3/4， best obj: 8866.0\n",
      "138/200:0/4， best obj: 8866.0\n",
      "138/200:1/4， best obj: 8866.0\n",
      "138/200:2/4， best obj: 8866.0\n",
      "138/200:3/4， best obj: 8866.0\n",
      "139/200:0/4， best obj: 8866.0\n",
      "139/200:1/4， best obj: 8866.0\n",
      "139/200:2/4， best obj: 8866.0\n",
      "139/200:3/4， best obj: 8866.0\n",
      "140/200:0/4， best obj: 8866.0\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "140/200:1/4， best obj: 8866.0\n",
      "140/200:2/4， best obj: 8866.0\n",
      "140/200:3/4， best obj: 8866.0\n",
      "141/200:0/4， best obj: 8866.0\n",
      "141/200:1/4， best obj: 8866.0\n",
      "141/200:2/4， best obj: 8866.0\n",
      "141/200:3/4， best obj: 8866.0\n",
      "142/200:0/4， best obj: 8866.0\n",
      "142/200:1/4， best obj: 8866.0\n",
      "142/200:2/4， best obj: 8866.0\n",
      "142/200:3/4， best obj: 8866.0\n",
      "143/200:0/4， best obj: 8866.0\n",
      "143/200:1/4， best obj: 8866.0\n",
      "143/200:2/4， best obj: 8866.0\n",
      "143/200:3/4， best obj: 8866.0\n",
      "144/200:0/4， best obj: 8866.0\n",
      "144/200:1/4， best obj: 8866.0\n",
      "144/200:2/4， best obj: 8866.0\n",
      "144/200:3/4， best obj: 8866.0\n",
      "145/200:0/4， best obj: 8866.0\n",
      "145/200:1/4， best obj: 8866.0\n",
      "145/200:2/4， best obj: 8866.0\n",
      "145/200:3/4， best obj: 8866.0\n",
      "146/200:0/4， best obj: 8866.0\n",
      "146/200:1/4， best obj: 8866.0\n",
      "146/200:2/4， best obj: 8866.0\n",
      "146/200:3/4， best obj: 8866.0\n",
      "147/200:0/4， best obj: 8866.0\n",
      "147/200:1/4， best obj: 8866.0\n",
      "147/200:2/4， best obj: 8866.0\n",
      "147/200:3/4， best obj: 8866.0\n",
      "148/200:0/4， best obj: 8866.0\n",
      "148/200:1/4， best obj: 8866.0\n",
      "148/200:2/4， best obj: 8866.0\n",
      "148/200:3/4， best obj: 8866.0\n",
      "149/200:0/4， best obj: 8866.0\n",
      "149/200:1/4， best obj: 8866.0\n",
      "149/200:2/4， best obj: 8866.0\n",
      "149/200:3/4， best obj: 8866.0\n",
      "150/200:0/4， best obj: 8866.0\n",
      "150/200:1/4， best obj: 8866.0\n",
      "150/200:2/4， best obj: 8866.0\n",
      "150/200:3/4， best obj: 8866.0\n",
      "151/200:0/4， best obj: 8866.0\n",
      "151/200:1/4， best obj: 8866.0\n",
      "151/200:2/4， best obj: 8866.0\n",
      "151/200:3/4， best obj: 8866.0\n",
      "152/200:0/4， best obj: 8866.0\n",
      "152/200:1/4， best obj: 8866.0\n",
      "152/200:2/4， best obj: 8866.0\n",
      "152/200:3/4， best obj: 8866.0\n",
      "153/200:0/4， best obj: 8866.0\n",
      "153/200:1/4， best obj: 8866.0\n",
      "153/200:2/4， best obj: 8866.0\n",
      "153/200:3/4， best obj: 8866.0\n",
      "154/200:0/4， best obj: 8866.0\n",
      "154/200:1/4， best obj: 8866.0\n",
      "154/200:2/4， best obj: 8866.0\n",
      "154/200:3/4， best obj: 8866.0\n",
      "155/200:0/4， best obj: 8866.0\n",
      "155/200:1/4， best obj: 8866.0\n",
      "155/200:2/4， best obj: 8866.0\n",
      "155/200:3/4， best obj: 8866.0\n",
      "156/200:0/4， best obj: 8866.0\n",
      "156/200:1/4， best obj: 8866.0\n",
      "156/200:2/4， best obj: 8866.0\n",
      "156/200:3/4， best obj: 8866.0\n",
      "157/200:0/4， best obj: 8866.0\n",
      "157/200:1/4， best obj: 8866.0\n",
      "157/200:2/4， best obj: 8866.0\n",
      "157/200:3/4， best obj: 8866.0\n",
      "158/200:0/4， best obj: 8866.0\n",
      "158/200:1/4， best obj: 8866.0\n",
      "158/200:2/4， best obj: 8866.0\n",
      "158/200:3/4， best obj: 8866.0\n",
      "159/200:0/4， best obj: 8866.0\n",
      "159/200:1/4， best obj: 8866.0\n",
      "159/200:2/4， best obj: 8866.0\n",
      "159/200:3/4， best obj: 8866.0\n",
      "160/200:0/4， best obj: 8866.0\n",
      "160/200:1/4， best obj: 8866.0\n",
      "160/200:2/4， best obj: 8866.0\n",
      "160/200:3/4， best obj: 8866.0\n",
      "161/200:0/4， best obj: 8866.0\n",
      "161/200:1/4， best obj: 8866.0\n",
      "161/200:2/4， best obj: 8866.0\n",
      "161/200:3/4， best obj: 8866.0\n",
      "162/200:0/4， best obj: 8866.0\n",
      "162/200:1/4， best obj: 8866.0\n",
      "162/200:2/4， best obj: 8866.0\n",
      "162/200:3/4， best obj: 8866.0\n",
      "163/200:0/4， best obj: 8866.0\n",
      "163/200:1/4， best obj: 8866.0\n",
      "163/200:2/4， best obj: 8866.0\n",
      "163/200:3/4， best obj: 8866.0\n",
      "164/200:0/4， best obj: 8866.0\n",
      "164/200:1/4， best obj: 8866.0\n",
      "164/200:2/4， best obj: 8866.0\n",
      "164/200:3/4， best obj: 8866.0\n",
      "165/200:0/4， best obj: 8866.0\n",
      "165/200:1/4， best obj: 8866.0\n",
      "165/200:2/4， best obj: 8866.0\n",
      "165/200:3/4， best obj: 8866.0\n",
      "166/200:0/4， best obj: 8866.0\n",
      "166/200:1/4， best obj: 8866.0\n",
      "166/200:2/4， best obj: 8866.0\n",
      "166/200:3/4， best obj: 8866.0\n",
      "167/200:0/4， best obj: 8866.0\n",
      "167/200:1/4， best obj: 8866.0\n",
      "167/200:2/4， best obj: 8866.0\n",
      "167/200:3/4， best obj: 8866.0\n",
      "168/200:0/4， best obj: 8866.0\n",
      "168/200:1/4， best obj: 8866.0\n",
      "168/200:2/4， best obj: 8866.0\n",
      "168/200:3/4， best obj: 8866.0\n",
      "169/200:0/4， best obj: 8866.0\n",
      "169/200:1/4， best obj: 8866.0\n",
      "169/200:2/4， best obj: 8866.0\n",
      "169/200:3/4， best obj: 8866.0\n",
      "170/200:0/4， best obj: 8866.0\n",
      "170/200:1/4， best obj: 8866.0\n",
      "170/200:2/4， best obj: 8866.0\n",
      "170/200:3/4， best obj: 8866.0\n",
      "171/200:0/4， best obj: 8866.0\n",
      "171/200:1/4， best obj: 8866.0\n",
      "171/200:2/4， best obj: 8866.0\n",
      "171/200:3/4， best obj: 8866.0\n",
      "172/200:0/4， best obj: 8866.0\n",
      "172/200:1/4， best obj: 8866.0\n",
      "172/200:2/4， best obj: 8866.0\n",
      "172/200:3/4， best obj: 8866.0\n",
      "173/200:0/4， best obj: 8866.0\n",
      "173/200:1/4， best obj: 8866.0\n",
      "173/200:2/4， best obj: 8866.0\n",
      "173/200:3/4， best obj: 8866.0\n",
      "174/200:0/4， best obj: 8866.0\n",
      "174/200:1/4， best obj: 8866.0\n",
      "174/200:2/4， best obj: 8866.0\n",
      "174/200:3/4， best obj: 8866.0\n",
      "175/200:0/4， best obj: 8866.0\n",
      "175/200:1/4， best obj: 8866.0\n",
      "175/200:2/4， best obj: 8866.0\n",
      "175/200:3/4， best obj: 8866.0\n",
      "176/200:0/4， best obj: 8843.0\n",
      "176/200:1/4， best obj: 8843.0\n",
      "176/200:2/4， best obj: 8843.0\n",
      "176/200:3/4， best obj: 8843.0\n",
      "177/200:0/4， best obj: 8843.0\n",
      "177/200:1/4， best obj: 8843.0\n",
      "177/200:2/4， best obj: 8843.0\n",
      "177/200:3/4， best obj: 8843.0\n",
      "178/200:0/4， best obj: 8843.0\n",
      "178/200:1/4， best obj: 8843.0\n",
      "178/200:2/4， best obj: 8843.0\n",
      "178/200:3/4， best obj: 8843.0\n",
      "179/200:0/4， best obj: 8843.0\n",
      "179/200:1/4， best obj: 8843.0\n",
      "179/200:2/4， best obj: 8843.0\n",
      "179/200:3/4， best obj: 8843.0\n",
      "180/200:0/4， best obj: 8843.0\n",
      "180/200:1/4， best obj: 8843.0\n",
      "180/200:2/4， best obj: 8843.0\n",
      "180/200:3/4， best obj: 8843.0\n",
      "181/200:0/4， best obj: 8843.0\n",
      "181/200:1/4， best obj: 8843.0\n",
      "181/200:2/4， best obj: 8843.0\n",
      "181/200:3/4， best obj: 8843.0\n",
      "182/200:0/4， best obj: 8843.0\n",
      "182/200:1/4， best obj: 8843.0\n",
      "182/200:2/4， best obj: 8843.0\n",
      "182/200:3/4， best obj: 8843.0\n",
      "183/200:0/4， best obj: 8843.0\n",
      "183/200:1/4， best obj: 8843.0\n",
      "183/200:2/4， best obj: 8843.0\n",
      "183/200:3/4， best obj: 8843.0\n",
      "184/200:0/4， best obj: 8843.0\n",
      "184/200:1/4， best obj: 8843.0\n",
      "184/200:2/4， best obj: 8843.0\n",
      "184/200:3/4， best obj: 8843.0\n",
      "185/200:0/4， best obj: 8843.0\n",
      "185/200:1/4， best obj: 8843.0\n",
      "185/200:2/4， best obj: 8843.0\n",
      "185/200:3/4， best obj: 8843.0\n",
      "186/200:0/4， best obj: 8843.0\n",
      "186/200:1/4， best obj: 8843.0\n",
      "186/200:2/4， best obj: 8843.0\n",
      "186/200:3/4， best obj: 8843.0\n",
      "187/200:0/4， best obj: 8843.0\n",
      "187/200:1/4， best obj: 8843.0\n",
      "187/200:2/4， best obj: 8843.0\n",
      "187/200:3/4， best obj: 8843.0\n",
      "188/200:0/4， best obj: 8843.0\n",
      "188/200:1/4， best obj: 8843.0\n",
      "188/200:2/4， best obj: 8843.0\n",
      "188/200:3/4， best obj: 8843.0\n",
      "189/200:0/4， best obj: 8843.0\n",
      "189/200:1/4， best obj: 8843.0\n",
      "189/200:2/4， best obj: 8843.0\n",
      "189/200:3/4， best obj: 8843.0\n",
      "190/200:0/4， best obj: 8843.0\n",
      "190/200:1/4， best obj: 8843.0\n",
      "190/200:2/4， best obj: 8843.0\n",
      "190/200:3/4， best obj: 8843.0\n",
      "191/200:0/4， best obj: 8843.0\n",
      "191/200:1/4， best obj: 8843.0\n",
      "191/200:2/4， best obj: 8843.0\n",
      "191/200:3/4， best obj: 8843.0\n",
      "192/200:0/4， best obj: 8843.0\n",
      "192/200:1/4， best obj: 8843.0\n",
      "192/200:2/4， best obj: 8843.0\n",
      "192/200:3/4， best obj: 8843.0\n",
      "193/200:0/4， best obj: 8843.0\n",
      "193/200:1/4， best obj: 8843.0\n",
      "193/200:2/4， best obj: 8843.0\n",
      "193/200:3/4， best obj: 8843.0\n",
      "194/200:0/4， best obj: 8843.0\n",
      "194/200:1/4， best obj: 8843.0\n",
      "194/200:2/4， best obj: 8843.0\n",
      "194/200:3/4， best obj: 8843.0\n",
      "195/200:0/4， best obj: 8843.0\n",
      "195/200:1/4， best obj: 8843.0\n",
      "195/200:2/4， best obj: 8843.0\n",
      "195/200:3/4， best obj: 8843.0\n",
      "196/200:0/4， best obj: 8843.0\n",
      "196/200:1/4， best obj: 8843.0\n",
      "196/200:2/4， best obj: 8843.0\n",
      "196/200:3/4， best obj: 8843.0\n",
      "197/200:0/4， best obj: 8843.0\n",
      "197/200:1/4， best obj: 8843.0\n",
      "197/200:2/4， best obj: 8843.0\n",
      "197/200:3/4， best obj: 8843.0\n",
      "198/200:0/4， best obj: 8843.0\n",
      "198/200:1/4， best obj: 8843.0\n",
      "198/200:2/4， best obj: 8843.0\n",
      "198/200:3/4， best obj: 8843.0\n",
      "199/200:0/4， best obj: 8843.0\n",
      "199/200:1/4， best obj: 8843.0\n",
      "199/200:2/4， best obj: 8843.0\n",
      "199/200:3/4， best obj: 8843.0\n"
     ]
    },
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\r\n",
       "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\r\n",
       "  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\r\n",
       "<svg height=\"259.09pt\" version=\"1.1\" viewBox=\"0 0 400.06717 259.09\" width=\"400.06717pt\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n",
       " <metadata>\r\n",
       "  <rdf:RDF xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\r\n",
       "   <cc:Work>\r\n",
       "    <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\"/>\r\n",
       "    <dc:date>2022-03-20T16:55:16.602744</dc:date>\r\n",
       "    <dc:format>image/svg+xml</dc:format>\r\n",
       "    <dc:creator>\r\n",
       "     <cc:Agent>\r\n",
       "      <dc:title>Matplotlib v3.4.3, https://matplotlib.org/</dc:title>\r\n",
       "     </cc:Agent>\r\n",
       "    </dc:creator>\r\n",
       "   </cc:Work>\r\n",
       "  </rdf:RDF>\r\n",
       " </metadata>\r\n",
       " <defs>\r\n",
       "  <style type=\"text/css\">*{stroke-linecap:butt;stroke-linejoin:round;}</style>\r\n",
       " </defs>\r\n",
       " <g id=\"figure_1\">\r\n",
       "  <g id=\"patch_1\">\r\n",
       "   <path d=\"M 0 259.09 \r\n",
       "L 400.06717 259.09 \r\n",
       "L 400.06717 0 \r\n",
       "L 0 0 \r\n",
       "z\r\n",
       "\" style=\"fill:none;\"/>\r\n",
       "  </g>\r\n",
       "  <g id=\"axes_1\">\r\n",
       "   <g id=\"patch_2\">\r\n",
       "    <path d=\"M 51.403125 224.64 \r\n",
       "L 386.203125 224.64 \r\n",
       "L 386.203125 7.2 \r\n",
       "L 51.403125 7.2 \r\n",
       "z\r\n",
       "\" style=\"fill:#ffffff;\"/>\r\n",
       "   </g>\r\n",
       "   <g id=\"matplotlib.axis_1\">\r\n",
       "    <g id=\"xtick_1\">\r\n",
       "     <g id=\"line2d_1\">\r\n",
       "      <path clip-path=\"url(#p952d0ddeb4)\" d=\"M 92.7829 224.64 \r\n",
       "L 92.7829 7.2 \r\n",
       "\" style=\"fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;\"/>\r\n",
       "     </g>\r\n",
       "     <g id=\"line2d_2\">\r\n",
       "      <defs>\r\n",
       "       <path d=\"M 0 0 \r\n",
       "L 0 3.5 \r\n",
       "\" id=\"mcf23201944\" style=\"stroke:#000000;stroke-width:0.8;\"/>\r\n",
       "      </defs>\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"92.7829\" xlink:href=\"#mcf23201944\" y=\"224.64\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_1\">\r\n",
       "      <!-- 100 -->\r\n",
       "      <g transform=\"translate(85.2829 238.515)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 1400 3600 \r\n",
       "Q 1075 3275 575 2975 \r\n",
       "L 575 3450 \r\n",
       "Q 1200 3875 1600 4450 \r\n",
       "L 1900 4450 \r\n",
       "L 1900 150 \r\n",
       "L 1400 150 \r\n",
       "L 1400 3600 \r\n",
       "z\r\n",
       "\" id=\"SimHei-31\" transform=\"scale(0.015625)\"/>\r\n",
       "        <path d=\"M 225 2537 \r\n",
       "Q 250 3200 412 3587 \r\n",
       "Q 575 3975 875 4225 \r\n",
       "Q 1175 4475 1612 4475 \r\n",
       "Q 2050 4475 2375 4112 \r\n",
       "Q 2700 3750 2800 3200 \r\n",
       "Q 2900 2650 2862 1937 \r\n",
       "Q 2825 1225 2612 775 \r\n",
       "Q 2400 325 1975 150 \r\n",
       "Q 1550 -25 1125 187 \r\n",
       "Q 700 400 525 750 \r\n",
       "Q 350 1100 275 1487 \r\n",
       "Q 200 1875 225 2537 \r\n",
       "z\r\n",
       "M 750 2687 \r\n",
       "Q 675 2000 800 1462 \r\n",
       "Q 925 925 1212 700 \r\n",
       "Q 1500 475 1800 612 \r\n",
       "Q 2100 750 2237 1162 \r\n",
       "Q 2375 1575 2375 2062 \r\n",
       "Q 2375 2550 2337 2950 \r\n",
       "Q 2300 3350 2112 3675 \r\n",
       "Q 1925 4000 1612 4012 \r\n",
       "Q 1300 4025 1062 3700 \r\n",
       "Q 825 3375 750 2687 \r\n",
       "z\r\n",
       "\" id=\"SimHei-30\" transform=\"scale(0.015625)\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#SimHei-31\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"100\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"xtick_2\">\r\n",
       "     <g id=\"line2d_3\">\r\n",
       "      <path clip-path=\"url(#p952d0ddeb4)\" d=\"M 134.580653 224.64 \r\n",
       "L 134.580653 7.2 \r\n",
       "\" style=\"fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;\"/>\r\n",
       "     </g>\r\n",
       "     <g id=\"line2d_4\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"134.580653\" xlink:href=\"#mcf23201944\" y=\"224.64\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_2\">\r\n",
       "      <!-- 200 -->\r\n",
       "      <g transform=\"translate(127.080653 238.515)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 300 250 \r\n",
       "Q 325 625 650 925 \r\n",
       "Q 975 1225 1475 1862 \r\n",
       "Q 1975 2500 2125 2850 \r\n",
       "Q 2275 3200 2237 3450 \r\n",
       "Q 2200 3700 2000 3862 \r\n",
       "Q 1800 4025 1537 4000 \r\n",
       "Q 1275 3975 1037 3800 \r\n",
       "Q 800 3625 675 3275 \r\n",
       "L 200 3350 \r\n",
       "Q 400 3925 712 4187 \r\n",
       "Q 1025 4450 1450 4475 \r\n",
       "Q 1700 4500 1900 4462 \r\n",
       "Q 2100 4425 2312 4287 \r\n",
       "Q 2525 4150 2662 3875 \r\n",
       "Q 2800 3600 2762 3212 \r\n",
       "Q 2725 2825 2375 2287 \r\n",
       "Q 2025 1750 1025 600 \r\n",
       "L 2825 600 \r\n",
       "L 2825 150 \r\n",
       "L 300 150 \r\n",
       "L 300 250 \r\n",
       "z\r\n",
       "\" id=\"SimHei-32\" transform=\"scale(0.015625)\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#SimHei-32\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"100\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"xtick_3\">\r\n",
       "     <g id=\"line2d_5\">\r\n",
       "      <path clip-path=\"url(#p952d0ddeb4)\" d=\"M 176.378406 224.64 \r\n",
       "L 176.378406 7.2 \r\n",
       "\" style=\"fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;\"/>\r\n",
       "     </g>\r\n",
       "     <g id=\"line2d_6\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"176.378406\" xlink:href=\"#mcf23201944\" y=\"224.64\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_3\">\r\n",
       "      <!-- 300 -->\r\n",
       "      <g transform=\"translate(168.878406 238.515)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 250 1225 \r\n",
       "L 700 1300 \r\n",
       "Q 800 975 1025 762 \r\n",
       "Q 1250 550 1587 562 \r\n",
       "Q 1925 575 2125 837 \r\n",
       "Q 2325 1100 2300 1437 \r\n",
       "Q 2275 1775 2037 1962 \r\n",
       "Q 1800 2150 1275 2225 \r\n",
       "L 1275 2550 \r\n",
       "Q 1800 2600 2037 2825 \r\n",
       "Q 2275 3050 2250 3412 \r\n",
       "Q 2225 3775 1925 3937 \r\n",
       "Q 1625 4100 1287 3975 \r\n",
       "Q 950 3850 750 3275 \r\n",
       "L 300 3350 \r\n",
       "Q 450 3800 712 4100 \r\n",
       "Q 975 4400 1425 4450 \r\n",
       "Q 1875 4500 2212 4337 \r\n",
       "Q 2550 4175 2687 3837 \r\n",
       "Q 2825 3500 2725 3100 \r\n",
       "Q 2625 2700 2150 2400 \r\n",
       "Q 2500 2250 2687 1950 \r\n",
       "Q 2875 1650 2812 1162 \r\n",
       "Q 2750 675 2375 375 \r\n",
       "Q 2000 75 1525 87 \r\n",
       "Q 1050 100 700 387 \r\n",
       "Q 350 675 250 1225 \r\n",
       "z\r\n",
       "\" id=\"SimHei-33\" transform=\"scale(0.015625)\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#SimHei-33\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"100\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"xtick_4\">\r\n",
       "     <g id=\"line2d_7\">\r\n",
       "      <path clip-path=\"url(#p952d0ddeb4)\" d=\"M 218.176159 224.64 \r\n",
       "L 218.176159 7.2 \r\n",
       "\" style=\"fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;\"/>\r\n",
       "     </g>\r\n",
       "     <g id=\"line2d_8\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"218.176159\" xlink:href=\"#mcf23201944\" y=\"224.64\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_4\">\r\n",
       "      <!-- 400 -->\r\n",
       "      <g transform=\"translate(210.676159 238.515)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 2000 1100 \r\n",
       "L 75 1100 \r\n",
       "L 75 1525 \r\n",
       "L 2100 4450 \r\n",
       "L 2475 4450 \r\n",
       "L 2475 1525 \r\n",
       "L 3075 1525 \r\n",
       "L 3075 1100 \r\n",
       "L 2475 1100 \r\n",
       "L 2475 150 \r\n",
       "L 2000 150 \r\n",
       "L 2000 1100 \r\n",
       "z\r\n",
       "M 2000 1525 \r\n",
       "L 2000 3500 \r\n",
       "L 600 1525 \r\n",
       "L 2000 1525 \r\n",
       "z\r\n",
       "\" id=\"SimHei-34\" transform=\"scale(0.015625)\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#SimHei-34\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"100\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"xtick_5\">\r\n",
       "     <g id=\"line2d_9\">\r\n",
       "      <path clip-path=\"url(#p952d0ddeb4)\" d=\"M 259.973912 224.64 \r\n",
       "L 259.973912 7.2 \r\n",
       "\" style=\"fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;\"/>\r\n",
       "     </g>\r\n",
       "     <g id=\"line2d_10\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"259.973912\" xlink:href=\"#mcf23201944\" y=\"224.64\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_5\">\r\n",
       "      <!-- 500 -->\r\n",
       "      <g transform=\"translate(252.473912 238.515)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 550 1325 \r\n",
       "Q 725 650 1150 575 \r\n",
       "Q 1575 500 1837 662 \r\n",
       "Q 2100 825 2212 1087 \r\n",
       "Q 2325 1350 2312 1675 \r\n",
       "Q 2300 2000 2137 2225 \r\n",
       "Q 1975 2450 1725 2525 \r\n",
       "Q 1475 2600 1162 2525 \r\n",
       "Q 850 2450 650 2175 \r\n",
       "L 225 2225 \r\n",
       "Q 275 2375 700 4375 \r\n",
       "L 2675 4375 \r\n",
       "L 2675 3925 \r\n",
       "L 1075 3925 \r\n",
       "Q 950 3250 825 2850 \r\n",
       "Q 1200 3025 1525 3012 \r\n",
       "Q 1850 3000 2150 2862 \r\n",
       "Q 2450 2725 2587 2487 \r\n",
       "Q 2725 2250 2787 2012 \r\n",
       "Q 2850 1775 2837 1500 \r\n",
       "Q 2825 1225 2725 937 \r\n",
       "Q 2625 650 2425 462 \r\n",
       "Q 2225 275 1937 162 \r\n",
       "Q 1650 50 1275 75 \r\n",
       "Q 900 100 562 350 \r\n",
       "Q 225 600 100 1200 \r\n",
       "L 550 1325 \r\n",
       "z\r\n",
       "\" id=\"SimHei-35\" transform=\"scale(0.015625)\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#SimHei-35\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"100\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"xtick_6\">\r\n",
       "     <g id=\"line2d_11\">\r\n",
       "      <path clip-path=\"url(#p952d0ddeb4)\" d=\"M 301.771664 224.64 \r\n",
       "L 301.771664 7.2 \r\n",
       "\" style=\"fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;\"/>\r\n",
       "     </g>\r\n",
       "     <g id=\"line2d_12\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"301.771664\" xlink:href=\"#mcf23201944\" y=\"224.64\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_6\">\r\n",
       "      <!-- 600 -->\r\n",
       "      <g transform=\"translate(294.271664 238.515)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 250 1612 \r\n",
       "Q 275 1975 387 2225 \r\n",
       "Q 500 2475 725 2850 \r\n",
       "L 1750 4450 \r\n",
       "L 2325 4450 \r\n",
       "L 1275 2800 \r\n",
       "Q 1950 2975 2350 2750 \r\n",
       "Q 2750 2525 2887 2237 \r\n",
       "Q 3025 1950 3037 1612 \r\n",
       "Q 3050 1275 2937 950 \r\n",
       "Q 2825 625 2537 362 \r\n",
       "Q 2250 100 1737 75 \r\n",
       "Q 1225 50 862 262 \r\n",
       "Q 500 475 362 862 \r\n",
       "Q 225 1250 250 1612 \r\n",
       "z\r\n",
       "M 1025 787 \r\n",
       "Q 1250 550 1625 525 \r\n",
       "Q 2000 500 2250 775 \r\n",
       "Q 2500 1050 2500 1575 \r\n",
       "Q 2500 2100 2187 2300 \r\n",
       "Q 1875 2500 1487 2450 \r\n",
       "Q 1100 2400 925 2075 \r\n",
       "Q 750 1750 775 1387 \r\n",
       "Q 800 1025 1025 787 \r\n",
       "z\r\n",
       "\" id=\"SimHei-36\" transform=\"scale(0.015625)\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#SimHei-36\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"100\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"xtick_7\">\r\n",
       "     <g id=\"line2d_13\">\r\n",
       "      <path clip-path=\"url(#p952d0ddeb4)\" d=\"M 343.569417 224.64 \r\n",
       "L 343.569417 7.2 \r\n",
       "\" style=\"fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;\"/>\r\n",
       "     </g>\r\n",
       "     <g id=\"line2d_14\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"343.569417\" xlink:href=\"#mcf23201944\" y=\"224.64\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_7\">\r\n",
       "      <!-- 700 -->\r\n",
       "      <g transform=\"translate(336.069417 238.515)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 850 150 \r\n",
       "Q 1300 2050 2425 3925 \r\n",
       "L 275 3925 \r\n",
       "L 275 4375 \r\n",
       "L 2950 4375 \r\n",
       "L 2950 3950 \r\n",
       "Q 1775 2050 1400 150 \r\n",
       "L 850 150 \r\n",
       "z\r\n",
       "\" id=\"SimHei-37\" transform=\"scale(0.015625)\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#SimHei-37\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"100\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"xtick_8\">\r\n",
       "     <g id=\"line2d_15\">\r\n",
       "      <path clip-path=\"url(#p952d0ddeb4)\" d=\"M 385.36717 224.64 \r\n",
       "L 385.36717 7.2 \r\n",
       "\" style=\"fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;\"/>\r\n",
       "     </g>\r\n",
       "     <g id=\"line2d_16\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"385.36717\" xlink:href=\"#mcf23201944\" y=\"224.64\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_8\">\r\n",
       "      <!-- 800 -->\r\n",
       "      <g transform=\"translate(377.86717 238.515)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 175 1375 \r\n",
       "Q 175 1675 325 1962 \r\n",
       "Q 475 2250 825 2425 \r\n",
       "Q 525 2600 425 2812 \r\n",
       "Q 325 3025 312 3300 \r\n",
       "Q 300 3575 387 3775 \r\n",
       "Q 475 3975 650 4150 \r\n",
       "Q 825 4325 1037 4387 \r\n",
       "Q 1250 4450 1500 4450 \r\n",
       "Q 1750 4450 1950 4400 \r\n",
       "Q 2150 4350 2375 4187 \r\n",
       "Q 2600 4025 2700 3725 \r\n",
       "Q 2800 3425 2687 3025 \r\n",
       "Q 2575 2625 2100 2400 \r\n",
       "Q 2525 2275 2700 2012 \r\n",
       "Q 2875 1750 2875 1375 \r\n",
       "Q 2875 1000 2762 775 \r\n",
       "Q 2650 550 2512 400 \r\n",
       "Q 2375 250 2137 162 \r\n",
       "Q 1900 75 1537 75 \r\n",
       "Q 1175 75 912 162 \r\n",
       "Q 650 250 475 425 \r\n",
       "Q 300 600 237 837 \r\n",
       "Q 175 1075 175 1375 \r\n",
       "z\r\n",
       "M 687 1400 \r\n",
       "Q 675 1100 787 875 \r\n",
       "Q 900 650 1200 587 \r\n",
       "Q 1500 525 1825 600 \r\n",
       "Q 2150 675 2275 950 \r\n",
       "Q 2400 1225 2362 1500 \r\n",
       "Q 2325 1775 2050 1962 \r\n",
       "Q 1775 2150 1450 2125 \r\n",
       "Q 1125 2100 912 1900 \r\n",
       "Q 700 1700 687 1400 \r\n",
       "z\r\n",
       "M 775 3350 \r\n",
       "Q 775 3100 950 2875 \r\n",
       "Q 1125 2650 1500 2650 \r\n",
       "Q 1875 2650 2062 2875 \r\n",
       "Q 2250 3100 2237 3412 \r\n",
       "Q 2225 3725 2012 3875 \r\n",
       "Q 1800 4025 1437 4000 \r\n",
       "Q 1075 3975 925 3787 \r\n",
       "Q 775 3600 775 3350 \r\n",
       "z\r\n",
       "\" id=\"SimHei-38\" transform=\"scale(0.015625)\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#SimHei-38\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"100\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"text_9\">\r\n",
       "     <!-- Iterations -->\r\n",
       "     <g transform=\"translate(193.803125 250.64)scale(0.1 -0.1)\">\r\n",
       "      <defs>\r\n",
       "       <path d=\"M 1850 125 \r\n",
       "L 1275 125 \r\n",
       "L 1275 4400 \r\n",
       "L 1850 4400 \r\n",
       "L 1850 125 \r\n",
       "z\r\n",
       "\" id=\"SimHei-49\" transform=\"scale(0.015625)\"/>\r\n",
       "       <path d=\"M 2750 200 \r\n",
       "Q 2625 150 2462 112 \r\n",
       "Q 2300 75 2025 75 \r\n",
       "Q 1575 75 1300 325 \r\n",
       "Q 1025 575 1025 1025 \r\n",
       "L 1025 2525 \r\n",
       "L 175 2525 \r\n",
       "L 175 2925 \r\n",
       "L 1025 2925 \r\n",
       "L 1025 3900 \r\n",
       "L 1525 3900 \r\n",
       "L 1525 2925 \r\n",
       "L 2550 2925 \r\n",
       "L 2550 2525 \r\n",
       "L 1525 2525 \r\n",
       "L 1525 1000 \r\n",
       "Q 1525 800 1625 662 \r\n",
       "Q 1725 525 2000 525 \r\n",
       "Q 2275 525 2450 575 \r\n",
       "Q 2625 625 2750 700 \r\n",
       "L 2750 200 \r\n",
       "z\r\n",
       "\" id=\"SimHei-74\" transform=\"scale(0.015625)\"/>\r\n",
       "       <path d=\"M 2850 1075 \r\n",
       "Q 2800 625 2450 350 \r\n",
       "Q 2100 75 1625 75 \r\n",
       "Q 1025 75 637 462 \r\n",
       "Q 250 850 250 1525 \r\n",
       "Q 250 2200 637 2587 \r\n",
       "Q 1025 2975 1625 2975 \r\n",
       "Q 2150 2975 2487 2637 \r\n",
       "Q 2825 2300 2825 1525 \r\n",
       "L 800 1525 \r\n",
       "Q 800 975 1037 750 \r\n",
       "Q 1275 525 1625 525 \r\n",
       "Q 1900 525 2075 662 \r\n",
       "Q 2250 800 2300 1075 \r\n",
       "L 2850 1075 \r\n",
       "z\r\n",
       "M 2250 1925 \r\n",
       "Q 2200 2275 2025 2412 \r\n",
       "Q 1850 2550 1575 2550 \r\n",
       "Q 1325 2550 1125 2412 \r\n",
       "Q 925 2275 825 1925 \r\n",
       "L 2250 1925 \r\n",
       "z\r\n",
       "\" id=\"SimHei-65\" transform=\"scale(0.015625)\"/>\r\n",
       "       <path d=\"M 2500 2425 \r\n",
       "Q 2025 2500 1700 2287 \r\n",
       "Q 1375 2075 1150 1550 \r\n",
       "L 1150 125 \r\n",
       "L 650 125 \r\n",
       "L 650 2925 \r\n",
       "L 1150 2925 \r\n",
       "L 1150 2200 \r\n",
       "Q 1375 2600 1712 2787 \r\n",
       "Q 2050 2975 2500 2975 \r\n",
       "L 2500 2425 \r\n",
       "z\r\n",
       "\" id=\"SimHei-72\" transform=\"scale(0.015625)\"/>\r\n",
       "       <path d=\"M 2875 125 \r\n",
       "L 2275 125 \r\n",
       "Q 2225 175 2200 262 \r\n",
       "Q 2175 350 2175 475 \r\n",
       "Q 2000 275 1750 175 \r\n",
       "Q 1500 75 1225 75 \r\n",
       "Q 825 75 550 275 \r\n",
       "Q 275 475 275 850 \r\n",
       "Q 275 1225 525 1450 \r\n",
       "Q 775 1675 1300 1750 \r\n",
       "Q 1650 1800 1912 1875 \r\n",
       "Q 2175 1950 2175 2075 \r\n",
       "Q 2175 2225 2062 2375 \r\n",
       "Q 1950 2525 1575 2525 \r\n",
       "Q 1275 2525 1137 2412 \r\n",
       "Q 1000 2300 950 2100 \r\n",
       "L 400 2100 \r\n",
       "Q 450 2500 762 2737 \r\n",
       "Q 1075 2975 1575 2975 \r\n",
       "Q 2125 2975 2400 2725 \r\n",
       "Q 2675 2475 2675 2025 \r\n",
       "L 2675 650 \r\n",
       "Q 2675 500 2725 375 \r\n",
       "Q 2775 250 2875 125 \r\n",
       "z\r\n",
       "M 2175 1050 \r\n",
       "L 2175 1550 \r\n",
       "Q 2025 1500 1887 1462 \r\n",
       "Q 1750 1425 1425 1375 \r\n",
       "Q 1050 1325 937 1200 \r\n",
       "Q 825 1075 825 900 \r\n",
       "Q 825 750 937 637 \r\n",
       "Q 1050 525 1275 525 \r\n",
       "Q 1500 525 1762 650 \r\n",
       "Q 2025 775 2175 1050 \r\n",
       "z\r\n",
       "\" id=\"SimHei-61\" transform=\"scale(0.015625)\"/>\r\n",
       "       <path d=\"M 1800 3725 \r\n",
       "L 1300 3725 \r\n",
       "L 1300 4375 \r\n",
       "L 1800 4375 \r\n",
       "L 1800 3725 \r\n",
       "z\r\n",
       "M 1800 125 \r\n",
       "L 1300 125 \r\n",
       "L 1300 2925 \r\n",
       "L 1800 2925 \r\n",
       "L 1800 125 \r\n",
       "z\r\n",
       "\" id=\"SimHei-69\" transform=\"scale(0.015625)\"/>\r\n",
       "       <path d=\"M 2925 1525 \r\n",
       "Q 2925 875 2525 475 \r\n",
       "Q 2125 75 1575 75 \r\n",
       "Q 1025 75 625 475 \r\n",
       "Q 225 875 225 1525 \r\n",
       "Q 225 2175 625 2575 \r\n",
       "Q 1025 2975 1575 2975 \r\n",
       "Q 2125 2975 2525 2575 \r\n",
       "Q 2925 2175 2925 1525 \r\n",
       "z\r\n",
       "M 2375 1525 \r\n",
       "Q 2375 2025 2125 2275 \r\n",
       "Q 1875 2525 1575 2525 \r\n",
       "Q 1275 2525 1025 2275 \r\n",
       "Q 775 2025 775 1525 \r\n",
       "Q 775 1025 1025 775 \r\n",
       "Q 1275 525 1575 525 \r\n",
       "Q 1875 525 2125 775 \r\n",
       "Q 2375 1025 2375 1525 \r\n",
       "z\r\n",
       "\" id=\"SimHei-6f\" transform=\"scale(0.015625)\"/>\r\n",
       "       <path d=\"M 2800 125 \r\n",
       "L 2300 125 \r\n",
       "L 2300 1925 \r\n",
       "Q 2300 2225 2150 2400 \r\n",
       "Q 2000 2575 1750 2575 \r\n",
       "Q 1425 2575 1137 2237 \r\n",
       "Q 850 1900 850 1400 \r\n",
       "L 850 125 \r\n",
       "L 350 125 \r\n",
       "L 350 2925 \r\n",
       "L 850 2925 \r\n",
       "L 850 2400 \r\n",
       "Q 1050 2675 1287 2825 \r\n",
       "Q 1525 2975 1900 2975 \r\n",
       "Q 2350 2975 2575 2725 \r\n",
       "Q 2800 2475 2800 2100 \r\n",
       "L 2800 125 \r\n",
       "z\r\n",
       "\" id=\"SimHei-6e\" transform=\"scale(0.015625)\"/>\r\n",
       "       <path d=\"M 2750 900 \r\n",
       "Q 2750 500 2437 287 \r\n",
       "Q 2125 75 1650 75 \r\n",
       "Q 1050 75 725 312 \r\n",
       "Q 400 550 400 1000 \r\n",
       "L 900 1000 \r\n",
       "Q 900 700 1112 600 \r\n",
       "Q 1325 500 1625 500 \r\n",
       "Q 1925 500 2075 612 \r\n",
       "Q 2225 725 2225 900 \r\n",
       "Q 2225 1025 2100 1150 \r\n",
       "Q 1975 1275 1475 1350 \r\n",
       "Q 900 1425 687 1637 \r\n",
       "Q 475 1850 475 2200 \r\n",
       "Q 475 2500 762 2737 \r\n",
       "Q 1050 2975 1600 2975 \r\n",
       "Q 2100 2975 2387 2750 \r\n",
       "Q 2675 2525 2675 2150 \r\n",
       "L 2175 2150 \r\n",
       "Q 2175 2375 2012 2462 \r\n",
       "Q 1850 2550 1600 2550 \r\n",
       "Q 1275 2550 1137 2437 \r\n",
       "Q 1000 2325 1000 2175 \r\n",
       "Q 1000 2000 1125 1900 \r\n",
       "Q 1250 1800 1650 1750 \r\n",
       "Q 2300 1650 2525 1437 \r\n",
       "Q 2750 1225 2750 900 \r\n",
       "z\r\n",
       "\" id=\"SimHei-73\" transform=\"scale(0.015625)\"/>\r\n",
       "      </defs>\r\n",
       "      <use xlink:href=\"#SimHei-49\"/>\r\n",
       "      <use x=\"50\" xlink:href=\"#SimHei-74\"/>\r\n",
       "      <use x=\"100\" xlink:href=\"#SimHei-65\"/>\r\n",
       "      <use x=\"150\" xlink:href=\"#SimHei-72\"/>\r\n",
       "      <use x=\"200\" xlink:href=\"#SimHei-61\"/>\r\n",
       "      <use x=\"250\" xlink:href=\"#SimHei-74\"/>\r\n",
       "      <use x=\"300\" xlink:href=\"#SimHei-69\"/>\r\n",
       "      <use x=\"350\" xlink:href=\"#SimHei-6f\"/>\r\n",
       "      <use x=\"400\" xlink:href=\"#SimHei-6e\"/>\r\n",
       "      <use x=\"450\" xlink:href=\"#SimHei-73\"/>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"matplotlib.axis_2\">\r\n",
       "    <g id=\"ytick_1\">\r\n",
       "     <g id=\"line2d_17\">\r\n",
       "      <path clip-path=\"url(#p952d0ddeb4)\" d=\"M 51.403125 209.699395 \r\n",
       "L 386.203125 209.699395 \r\n",
       "\" style=\"fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;\"/>\r\n",
       "     </g>\r\n",
       "     <g id=\"line2d_18\">\r\n",
       "      <defs>\r\n",
       "       <path d=\"M 0 0 \r\n",
       "L -3.5 0 \r\n",
       "\" id=\"me14115413e\" style=\"stroke:#000000;stroke-width:0.8;\"/>\r\n",
       "      </defs>\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"51.403125\" xlink:href=\"#me14115413e\" y=\"209.699395\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_10\">\r\n",
       "      <!-- 9000 -->\r\n",
       "      <g transform=\"translate(24.403125 213.136895)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 800 75 \r\n",
       "Q 1350 1000 1700 1750 \r\n",
       "Q 1075 1650 662 1912 \r\n",
       "Q 250 2175 162 2625 \r\n",
       "Q 75 3075 175 3437 \r\n",
       "Q 275 3800 487 4037 \r\n",
       "Q 700 4275 1000 4375 \r\n",
       "Q 1300 4475 1537 4475 \r\n",
       "Q 1775 4475 2025 4375 \r\n",
       "Q 2275 4275 2475 4075 \r\n",
       "Q 2675 3875 2750 3662 \r\n",
       "Q 2825 3450 2825 3112 \r\n",
       "Q 2825 2775 2575 2250 \r\n",
       "Q 2325 1725 1350 75 \r\n",
       "L 800 75 \r\n",
       "z\r\n",
       "M 662 2875 \r\n",
       "Q 700 2550 937 2337 \r\n",
       "Q 1175 2125 1450 2150 \r\n",
       "Q 1725 2175 1887 2300 \r\n",
       "Q 2050 2425 2200 2725 \r\n",
       "Q 2300 3100 2250 3362 \r\n",
       "Q 2200 3625 1987 3800 \r\n",
       "Q 1775 3975 1525 3975 \r\n",
       "Q 1375 4000 1137 3900 \r\n",
       "Q 900 3800 762 3500 \r\n",
       "Q 625 3200 662 2875 \r\n",
       "z\r\n",
       "\" id=\"SimHei-39\" transform=\"scale(0.015625)\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#SimHei-39\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"100\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"150\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"ytick_2\">\r\n",
       "     <g id=\"line2d_19\">\r\n",
       "      <path clip-path=\"url(#p952d0ddeb4)\" d=\"M 51.403125 177.489402 \r\n",
       "L 386.203125 177.489402 \r\n",
       "\" style=\"fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;\"/>\r\n",
       "     </g>\r\n",
       "     <g id=\"line2d_20\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"51.403125\" xlink:href=\"#me14115413e\" y=\"177.489402\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_11\">\r\n",
       "      <!-- 10000 -->\r\n",
       "      <g transform=\"translate(19.403125 180.926902)scale(0.1 -0.1)\">\r\n",
       "       <use xlink:href=\"#SimHei-31\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"100\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"150\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"200\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"ytick_3\">\r\n",
       "     <g id=\"line2d_21\">\r\n",
       "      <path clip-path=\"url(#p952d0ddeb4)\" d=\"M 51.403125 145.279409 \r\n",
       "L 386.203125 145.279409 \r\n",
       "\" style=\"fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;\"/>\r\n",
       "     </g>\r\n",
       "     <g id=\"line2d_22\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"51.403125\" xlink:href=\"#me14115413e\" y=\"145.279409\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_12\">\r\n",
       "      <!-- 11000 -->\r\n",
       "      <g transform=\"translate(19.403125 148.716909)scale(0.1 -0.1)\">\r\n",
       "       <use xlink:href=\"#SimHei-31\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-31\"/>\r\n",
       "       <use x=\"100\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"150\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"200\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"ytick_4\">\r\n",
       "     <g id=\"line2d_23\">\r\n",
       "      <path clip-path=\"url(#p952d0ddeb4)\" d=\"M 51.403125 113.069416 \r\n",
       "L 386.203125 113.069416 \r\n",
       "\" style=\"fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;\"/>\r\n",
       "     </g>\r\n",
       "     <g id=\"line2d_24\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"51.403125\" xlink:href=\"#me14115413e\" y=\"113.069416\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_13\">\r\n",
       "      <!-- 12000 -->\r\n",
       "      <g transform=\"translate(19.403125 116.506916)scale(0.1 -0.1)\">\r\n",
       "       <use xlink:href=\"#SimHei-31\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-32\"/>\r\n",
       "       <use x=\"100\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"150\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"200\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"ytick_5\">\r\n",
       "     <g id=\"line2d_25\">\r\n",
       "      <path clip-path=\"url(#p952d0ddeb4)\" d=\"M 51.403125 80.859423 \r\n",
       "L 386.203125 80.859423 \r\n",
       "\" style=\"fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;\"/>\r\n",
       "     </g>\r\n",
       "     <g id=\"line2d_26\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"51.403125\" xlink:href=\"#me14115413e\" y=\"80.859423\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_14\">\r\n",
       "      <!-- 13000 -->\r\n",
       "      <g transform=\"translate(19.403125 84.296923)scale(0.1 -0.1)\">\r\n",
       "       <use xlink:href=\"#SimHei-31\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-33\"/>\r\n",
       "       <use x=\"100\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"150\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"200\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"ytick_6\">\r\n",
       "     <g id=\"line2d_27\">\r\n",
       "      <path clip-path=\"url(#p952d0ddeb4)\" d=\"M 51.403125 48.64943 \r\n",
       "L 386.203125 48.64943 \r\n",
       "\" style=\"fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;\"/>\r\n",
       "     </g>\r\n",
       "     <g id=\"line2d_28\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"51.403125\" xlink:href=\"#me14115413e\" y=\"48.64943\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_15\">\r\n",
       "      <!-- 14000 -->\r\n",
       "      <g transform=\"translate(19.403125 52.08693)scale(0.1 -0.1)\">\r\n",
       "       <use xlink:href=\"#SimHei-31\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-34\"/>\r\n",
       "       <use x=\"100\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"150\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"200\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"ytick_7\">\r\n",
       "     <g id=\"line2d_29\">\r\n",
       "      <path clip-path=\"url(#p952d0ddeb4)\" d=\"M 51.403125 16.439437 \r\n",
       "L 386.203125 16.439437 \r\n",
       "\" style=\"fill:none;stroke:#b0b0b0;stroke-linecap:square;stroke-width:0.8;\"/>\r\n",
       "     </g>\r\n",
       "     <g id=\"line2d_30\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"51.403125\" xlink:href=\"#me14115413e\" y=\"16.439437\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_16\">\r\n",
       "      <!-- 15000 -->\r\n",
       "      <g transform=\"translate(19.403125 19.876937)scale(0.1 -0.1)\">\r\n",
       "       <use xlink:href=\"#SimHei-31\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-35\"/>\r\n",
       "       <use x=\"100\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"150\" xlink:href=\"#SimHei-30\"/>\r\n",
       "       <use x=\"200\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"text_17\">\r\n",
       "     <!-- Obj Value -->\r\n",
       "     <g transform=\"translate(14.153125 138.42)rotate(-90)scale(0.1 -0.1)\">\r\n",
       "      <defs>\r\n",
       "       <path d=\"M 2950 2275 \r\n",
       "Q 2950 1100 2587 587 \r\n",
       "Q 2225 75 1575 75 \r\n",
       "Q 925 75 550 587 \r\n",
       "Q 175 1100 175 2275 \r\n",
       "Q 175 3450 550 3950 \r\n",
       "Q 925 4450 1575 4450 \r\n",
       "Q 2225 4450 2587 3950 \r\n",
       "Q 2950 3450 2950 2275 \r\n",
       "z\r\n",
       "M 2350 2275 \r\n",
       "Q 2350 3325 2125 3650 \r\n",
       "Q 1900 3975 1575 3975 \r\n",
       "Q 1250 3975 1012 3650 \r\n",
       "Q 775 3325 775 2275 \r\n",
       "Q 775 1225 1012 887 \r\n",
       "Q 1250 550 1575 550 \r\n",
       "Q 1900 550 2125 887 \r\n",
       "Q 2350 1225 2350 2275 \r\n",
       "z\r\n",
       "\" id=\"SimHei-4f\" transform=\"scale(0.015625)\"/>\r\n",
       "       <path d=\"M 2825 1525 \r\n",
       "Q 2825 800 2475 437 \r\n",
       "Q 2125 75 1625 75 \r\n",
       "Q 1350 75 1150 175 \r\n",
       "Q 950 275 800 500 \r\n",
       "L 800 125 \r\n",
       "L 300 125 \r\n",
       "L 300 4400 \r\n",
       "L 800 4400 \r\n",
       "L 800 2550 \r\n",
       "Q 950 2775 1150 2887 \r\n",
       "Q 1350 3000 1625 3000 \r\n",
       "Q 2125 3000 2475 2625 \r\n",
       "Q 2825 2250 2825 1525 \r\n",
       "z\r\n",
       "M 2275 1525 \r\n",
       "Q 2275 2000 2087 2275 \r\n",
       "Q 1900 2550 1525 2550 \r\n",
       "Q 1225 2550 1012 2275 \r\n",
       "Q 800 2000 800 1525 \r\n",
       "Q 800 1050 1012 787 \r\n",
       "Q 1225 525 1525 525 \r\n",
       "Q 1900 525 2087 787 \r\n",
       "Q 2275 1050 2275 1525 \r\n",
       "z\r\n",
       "\" id=\"SimHei-62\" transform=\"scale(0.015625)\"/>\r\n",
       "       <path d=\"M 2300 3725 \r\n",
       "L 1800 3725 \r\n",
       "L 1800 4375 \r\n",
       "L 2300 4375 \r\n",
       "L 2300 3725 \r\n",
       "z\r\n",
       "M 2300 150 \r\n",
       "Q 2300 -300 2025 -550 \r\n",
       "Q 1750 -800 1300 -800 \r\n",
       "Q 1025 -800 862 -762 \r\n",
       "Q 700 -725 575 -675 \r\n",
       "L 575 -175 \r\n",
       "Q 700 -250 875 -300 \r\n",
       "Q 1050 -350 1325 -350 \r\n",
       "Q 1600 -350 1700 -212 \r\n",
       "Q 1800 -75 1800 125 \r\n",
       "L 1800 2925 \r\n",
       "L 2300 2925 \r\n",
       "L 2300 150 \r\n",
       "z\r\n",
       "\" id=\"SimHei-6a\" transform=\"scale(0.015625)\"/>\r\n",
       "       <path id=\"SimHei-20\" transform=\"scale(0.015625)\"/>\r\n",
       "       <path d=\"M 3050 4400 \r\n",
       "L 1800 75 \r\n",
       "L 1300 75 \r\n",
       "L 50 4400 \r\n",
       "L 650 4400 \r\n",
       "L 1525 1125 \r\n",
       "L 1575 1125 \r\n",
       "L 2450 4400 \r\n",
       "L 3050 4400 \r\n",
       "z\r\n",
       "\" id=\"SimHei-56\" transform=\"scale(0.015625)\"/>\r\n",
       "       <path d=\"M 1825 125 \r\n",
       "L 1325 125 \r\n",
       "L 1325 4400 \r\n",
       "L 1825 4400 \r\n",
       "L 1825 125 \r\n",
       "z\r\n",
       "\" id=\"SimHei-6c\" transform=\"scale(0.015625)\"/>\r\n",
       "       <path d=\"M 2800 125 \r\n",
       "L 2300 125 \r\n",
       "L 2300 650 \r\n",
       "Q 2100 375 1862 225 \r\n",
       "Q 1625 75 1250 75 \r\n",
       "Q 800 75 575 325 \r\n",
       "Q 350 575 350 950 \r\n",
       "L 350 2925 \r\n",
       "L 850 2925 \r\n",
       "L 850 1125 \r\n",
       "Q 850 825 1000 650 \r\n",
       "Q 1150 475 1400 475 \r\n",
       "Q 1725 475 2012 812 \r\n",
       "Q 2300 1150 2300 1650 \r\n",
       "L 2300 2925 \r\n",
       "L 2800 2925 \r\n",
       "L 2800 125 \r\n",
       "z\r\n",
       "\" id=\"SimHei-75\" transform=\"scale(0.015625)\"/>\r\n",
       "      </defs>\r\n",
       "      <use xlink:href=\"#SimHei-4f\"/>\r\n",
       "      <use x=\"50\" xlink:href=\"#SimHei-62\"/>\r\n",
       "      <use x=\"100\" xlink:href=\"#SimHei-6a\"/>\r\n",
       "      <use x=\"150\" xlink:href=\"#SimHei-20\"/>\r\n",
       "      <use x=\"200\" xlink:href=\"#SimHei-56\"/>\r\n",
       "      <use x=\"250\" xlink:href=\"#SimHei-61\"/>\r\n",
       "      <use x=\"300\" xlink:href=\"#SimHei-6c\"/>\r\n",
       "      <use x=\"350\" xlink:href=\"#SimHei-75\"/>\r\n",
       "      <use x=\"400\" xlink:href=\"#SimHei-65\"/>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_31\">\r\n",
       "    <path clip-path=\"url(#p952d0ddeb4)\" d=\"M 51.403125 17.083636 \r\n",
       "L 51.821103 32.480013 \r\n",
       "L 52.23908 41.788701 \r\n",
       "L 52.657058 84.853462 \r\n",
       "L 53.075035 89.330651 \r\n",
       "L 53.493013 154.942407 \r\n",
       "L 53.91099 161.609875 \r\n",
       "L 54.328968 182.224271 \r\n",
       "L 54.746945 184.86549 \r\n",
       "L 55.5829 184.86549 \r\n",
       "L 56.000878 186.57262 \r\n",
       "L 56.418855 192.628098 \r\n",
       "L 56.836833 194.818378 \r\n",
       "L 57.25481 194.818378 \r\n",
       "L 58.090765 201.840156 \r\n",
       "L 58.508743 203.386236 \r\n",
       "L 58.926721 203.933806 \r\n",
       "L 59.344698 203.933806 \r\n",
       "L 59.762676 204.835686 \r\n",
       "L 60.180653 207.573535 \r\n",
       "L 60.598631 207.573535 \r\n",
       "L 61.016608 210.021495 \r\n",
       "L 61.434586 211.148844 \r\n",
       "L 61.852563 213.790064 \r\n",
       "L 62.270541 213.790064 \r\n",
       "L 62.688518 214.015534 \r\n",
       "L 345.659305 214.015534 \r\n",
       "L 346.077282 214.756364 \r\n",
       "L 385.785147 214.756364 \r\n",
       "L 385.785147 214.756364 \r\n",
       "\" style=\"fill:none;stroke:#1f77b4;stroke-linecap:square;stroke-width:1.5;\"/>\r\n",
       "   </g>\r\n",
       "   <g id=\"patch_3\">\r\n",
       "    <path d=\"M 51.403125 224.64 \r\n",
       "L 51.403125 7.2 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\r\n",
       "   </g>\r\n",
       "   <g id=\"patch_4\">\r\n",
       "    <path d=\"M 386.203125 224.64 \r\n",
       "L 386.203125 7.2 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\r\n",
       "   </g>\r\n",
       "   <g id=\"patch_5\">\r\n",
       "    <path d=\"M 51.403125 224.64 \r\n",
       "L 386.203125 224.64 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\r\n",
       "   </g>\r\n",
       "   <g id=\"patch_6\">\r\n",
       "    <path d=\"M 51.403125 7.2 \r\n",
       "L 386.203125 7.2 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\r\n",
       "   </g>\r\n",
       "  </g>\r\n",
       " </g>\r\n",
       " <defs>\r\n",
       "  <clipPath id=\"p952d0ddeb4\">\r\n",
       "   <rect height=\"217.44\" width=\"334.8\" x=\"51.403125\" y=\"7.2\"/>\r\n",
       "  </clipPath>\r\n",
       " </defs>\r\n",
       "</svg>\r\n"
      ],
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\r\n",
       "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\r\n",
       "  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\r\n",
       "<svg height=\"259.168125pt\" version=\"1.1\" viewBox=\"0 0 378.403125 259.168125\" width=\"378.403125pt\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n",
       " <metadata>\r\n",
       "  <rdf:RDF xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\r\n",
       "   <cc:Work>\r\n",
       "    <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\"/>\r\n",
       "    <dc:date>2022-03-20T16:55:16.835600</dc:date>\r\n",
       "    <dc:format>image/svg+xml</dc:format>\r\n",
       "    <dc:creator>\r\n",
       "     <cc:Agent>\r\n",
       "      <dc:title>Matplotlib v3.4.3, https://matplotlib.org/</dc:title>\r\n",
       "     </cc:Agent>\r\n",
       "    </dc:creator>\r\n",
       "   </cc:Work>\r\n",
       "  </rdf:RDF>\r\n",
       " </metadata>\r\n",
       " <defs>\r\n",
       "  <style type=\"text/css\">*{stroke-linecap:butt;stroke-linejoin:round;}</style>\r\n",
       " </defs>\r\n",
       " <g id=\"figure_1\">\r\n",
       "  <g id=\"patch_1\">\r\n",
       "   <path d=\"M 0 259.168125 \r\n",
       "L 378.403125 259.168125 \r\n",
       "L 378.403125 0 \r\n",
       "L 0 0 \r\n",
       "z\r\n",
       "\" style=\"fill:none;\"/>\r\n",
       "  </g>\r\n",
       "  <g id=\"axes_1\">\r\n",
       "   <g id=\"patch_2\">\r\n",
       "    <path d=\"M 36.403125 224.64 \r\n",
       "L 371.203125 224.64 \r\n",
       "L 371.203125 7.2 \r\n",
       "L 36.403125 7.2 \r\n",
       "z\r\n",
       "\" style=\"fill:#ffffff;\"/>\r\n",
       "   </g>\r\n",
       "   <g id=\"matplotlib.axis_1\">\r\n",
       "    <g id=\"xtick_1\">\r\n",
       "     <g id=\"line2d_1\">\r\n",
       "      <defs>\r\n",
       "       <path d=\"M 0 0 \r\n",
       "L 0 3.5 \r\n",
       "\" id=\"md9147c1a0d\" style=\"stroke:#000000;stroke-width:0.8;\"/>\r\n",
       "      </defs>\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"51.621307\" xlink:href=\"#md9147c1a0d\" y=\"224.64\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_1\">\r\n",
       "      <!-- 0 -->\r\n",
       "      <g transform=\"translate(49.121307 238.515)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 225 2537 \r\n",
       "Q 250 3200 412 3587 \r\n",
       "Q 575 3975 875 4225 \r\n",
       "Q 1175 4475 1612 4475 \r\n",
       "Q 2050 4475 2375 4112 \r\n",
       "Q 2700 3750 2800 3200 \r\n",
       "Q 2900 2650 2862 1937 \r\n",
       "Q 2825 1225 2612 775 \r\n",
       "Q 2400 325 1975 150 \r\n",
       "Q 1550 -25 1125 187 \r\n",
       "Q 700 400 525 750 \r\n",
       "Q 350 1100 275 1487 \r\n",
       "Q 200 1875 225 2537 \r\n",
       "z\r\n",
       "M 750 2687 \r\n",
       "Q 675 2000 800 1462 \r\n",
       "Q 925 925 1212 700 \r\n",
       "Q 1500 475 1800 612 \r\n",
       "Q 2100 750 2237 1162 \r\n",
       "Q 2375 1575 2375 2062 \r\n",
       "Q 2375 2550 2337 2950 \r\n",
       "Q 2300 3350 2112 3675 \r\n",
       "Q 1925 4000 1612 4012 \r\n",
       "Q 1300 4025 1062 3700 \r\n",
       "Q 825 3375 750 2687 \r\n",
       "z\r\n",
       "\" id=\"SimHei-30\" transform=\"scale(0.015625)\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"xtick_2\">\r\n",
       "     <g id=\"line2d_2\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"115.697862\" xlink:href=\"#md9147c1a0d\" y=\"224.64\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_2\">\r\n",
       "      <!-- 20 -->\r\n",
       "      <g transform=\"translate(110.697862 238.515)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 300 250 \r\n",
       "Q 325 625 650 925 \r\n",
       "Q 975 1225 1475 1862 \r\n",
       "Q 1975 2500 2125 2850 \r\n",
       "Q 2275 3200 2237 3450 \r\n",
       "Q 2200 3700 2000 3862 \r\n",
       "Q 1800 4025 1537 4000 \r\n",
       "Q 1275 3975 1037 3800 \r\n",
       "Q 800 3625 675 3275 \r\n",
       "L 200 3350 \r\n",
       "Q 400 3925 712 4187 \r\n",
       "Q 1025 4450 1450 4475 \r\n",
       "Q 1700 4500 1900 4462 \r\n",
       "Q 2100 4425 2312 4287 \r\n",
       "Q 2525 4150 2662 3875 \r\n",
       "Q 2800 3600 2762 3212 \r\n",
       "Q 2725 2825 2375 2287 \r\n",
       "Q 2025 1750 1025 600 \r\n",
       "L 2825 600 \r\n",
       "L 2825 150 \r\n",
       "L 300 150 \r\n",
       "L 300 250 \r\n",
       "z\r\n",
       "\" id=\"SimHei-32\" transform=\"scale(0.015625)\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#SimHei-32\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"xtick_3\">\r\n",
       "     <g id=\"line2d_3\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"179.774417\" xlink:href=\"#md9147c1a0d\" y=\"224.64\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_3\">\r\n",
       "      <!-- 40 -->\r\n",
       "      <g transform=\"translate(174.774417 238.515)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 2000 1100 \r\n",
       "L 75 1100 \r\n",
       "L 75 1525 \r\n",
       "L 2100 4450 \r\n",
       "L 2475 4450 \r\n",
       "L 2475 1525 \r\n",
       "L 3075 1525 \r\n",
       "L 3075 1100 \r\n",
       "L 2475 1100 \r\n",
       "L 2475 150 \r\n",
       "L 2000 150 \r\n",
       "L 2000 1100 \r\n",
       "z\r\n",
       "M 2000 1525 \r\n",
       "L 2000 3500 \r\n",
       "L 600 1525 \r\n",
       "L 2000 1525 \r\n",
       "z\r\n",
       "\" id=\"SimHei-34\" transform=\"scale(0.015625)\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#SimHei-34\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"xtick_4\">\r\n",
       "     <g id=\"line2d_4\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"243.850972\" xlink:href=\"#md9147c1a0d\" y=\"224.64\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_4\">\r\n",
       "      <!-- 60 -->\r\n",
       "      <g transform=\"translate(238.850972 238.515)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 250 1612 \r\n",
       "Q 275 1975 387 2225 \r\n",
       "Q 500 2475 725 2850 \r\n",
       "L 1750 4450 \r\n",
       "L 2325 4450 \r\n",
       "L 1275 2800 \r\n",
       "Q 1950 2975 2350 2750 \r\n",
       "Q 2750 2525 2887 2237 \r\n",
       "Q 3025 1950 3037 1612 \r\n",
       "Q 3050 1275 2937 950 \r\n",
       "Q 2825 625 2537 362 \r\n",
       "Q 2250 100 1737 75 \r\n",
       "Q 1225 50 862 262 \r\n",
       "Q 500 475 362 862 \r\n",
       "Q 225 1250 250 1612 \r\n",
       "z\r\n",
       "M 1025 787 \r\n",
       "Q 1250 550 1625 525 \r\n",
       "Q 2000 500 2250 775 \r\n",
       "Q 2500 1050 2500 1575 \r\n",
       "Q 2500 2100 2187 2300 \r\n",
       "Q 1875 2500 1487 2450 \r\n",
       "Q 1100 2400 925 2075 \r\n",
       "Q 750 1750 775 1387 \r\n",
       "Q 800 1025 1025 787 \r\n",
       "z\r\n",
       "\" id=\"SimHei-36\" transform=\"scale(0.015625)\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#SimHei-36\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"xtick_5\">\r\n",
       "     <g id=\"line2d_5\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"307.927527\" xlink:href=\"#md9147c1a0d\" y=\"224.64\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_5\">\r\n",
       "      <!-- 80 -->\r\n",
       "      <g transform=\"translate(302.927527 238.515)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 175 1375 \r\n",
       "Q 175 1675 325 1962 \r\n",
       "Q 475 2250 825 2425 \r\n",
       "Q 525 2600 425 2812 \r\n",
       "Q 325 3025 312 3300 \r\n",
       "Q 300 3575 387 3775 \r\n",
       "Q 475 3975 650 4150 \r\n",
       "Q 825 4325 1037 4387 \r\n",
       "Q 1250 4450 1500 4450 \r\n",
       "Q 1750 4450 1950 4400 \r\n",
       "Q 2150 4350 2375 4187 \r\n",
       "Q 2600 4025 2700 3725 \r\n",
       "Q 2800 3425 2687 3025 \r\n",
       "Q 2575 2625 2100 2400 \r\n",
       "Q 2525 2275 2700 2012 \r\n",
       "Q 2875 1750 2875 1375 \r\n",
       "Q 2875 1000 2762 775 \r\n",
       "Q 2650 550 2512 400 \r\n",
       "Q 2375 250 2137 162 \r\n",
       "Q 1900 75 1537 75 \r\n",
       "Q 1175 75 912 162 \r\n",
       "Q 650 250 475 425 \r\n",
       "Q 300 600 237 837 \r\n",
       "Q 175 1075 175 1375 \r\n",
       "z\r\n",
       "M 687 1400 \r\n",
       "Q 675 1100 787 875 \r\n",
       "Q 900 650 1200 587 \r\n",
       "Q 1500 525 1825 600 \r\n",
       "Q 2150 675 2275 950 \r\n",
       "Q 2400 1225 2362 1500 \r\n",
       "Q 2325 1775 2050 1962 \r\n",
       "Q 1775 2150 1450 2125 \r\n",
       "Q 1125 2100 912 1900 \r\n",
       "Q 700 1700 687 1400 \r\n",
       "z\r\n",
       "M 775 3350 \r\n",
       "Q 775 3100 950 2875 \r\n",
       "Q 1125 2650 1500 2650 \r\n",
       "Q 1875 2650 2062 2875 \r\n",
       "Q 2250 3100 2237 3412 \r\n",
       "Q 2225 3725 2012 3875 \r\n",
       "Q 1800 4025 1437 4000 \r\n",
       "Q 1075 3975 925 3787 \r\n",
       "Q 775 3600 775 3350 \r\n",
       "z\r\n",
       "\" id=\"SimHei-38\" transform=\"scale(0.015625)\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#SimHei-38\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"text_6\">\r\n",
       "     <!-- x_coord -->\r\n",
       "     <g transform=\"translate(186.303125 250.64)scale(0.1 -0.1)\">\r\n",
       "      <defs>\r\n",
       "       <path d=\"M 2875 125 \r\n",
       "L 2275 125 \r\n",
       "L 1550 1200 \r\n",
       "L 825 125 \r\n",
       "L 225 125 \r\n",
       "L 1250 1550 \r\n",
       "L 300 2925 \r\n",
       "L 900 2925 \r\n",
       "L 1550 1875 \r\n",
       "L 2200 2925 \r\n",
       "L 2800 2925 \r\n",
       "L 1850 1550 \r\n",
       "L 2875 125 \r\n",
       "z\r\n",
       "\" id=\"SimHei-78\" transform=\"scale(0.015625)\"/>\r\n",
       "       <path d=\"M 3150 -850 \r\n",
       "L 0 -850 \r\n",
       "L 0 -550 \r\n",
       "L 3150 -550 \r\n",
       "L 3150 -850 \r\n",
       "z\r\n",
       "\" id=\"SimHei-5f\" transform=\"scale(0.015625)\"/>\r\n",
       "       <path d=\"M 2850 1250 \r\n",
       "Q 2850 725 2487 400 \r\n",
       "Q 2125 75 1575 75 \r\n",
       "Q 1025 75 625 462 \r\n",
       "Q 225 850 225 1525 \r\n",
       "Q 225 2200 625 2587 \r\n",
       "Q 1025 2975 1575 2975 \r\n",
       "Q 2125 2975 2450 2687 \r\n",
       "Q 2775 2400 2775 2000 \r\n",
       "L 2225 2000 \r\n",
       "Q 2200 2300 2012 2412 \r\n",
       "Q 1825 2525 1575 2525 \r\n",
       "Q 1275 2525 1025 2287 \r\n",
       "Q 775 2050 775 1525 \r\n",
       "Q 775 1000 1025 762 \r\n",
       "Q 1275 525 1575 525 \r\n",
       "Q 1900 525 2100 700 \r\n",
       "Q 2300 875 2300 1250 \r\n",
       "L 2850 1250 \r\n",
       "z\r\n",
       "\" id=\"SimHei-63\" transform=\"scale(0.015625)\"/>\r\n",
       "       <path d=\"M 2925 1525 \r\n",
       "Q 2925 875 2525 475 \r\n",
       "Q 2125 75 1575 75 \r\n",
       "Q 1025 75 625 475 \r\n",
       "Q 225 875 225 1525 \r\n",
       "Q 225 2175 625 2575 \r\n",
       "Q 1025 2975 1575 2975 \r\n",
       "Q 2125 2975 2525 2575 \r\n",
       "Q 2925 2175 2925 1525 \r\n",
       "z\r\n",
       "M 2375 1525 \r\n",
       "Q 2375 2025 2125 2275 \r\n",
       "Q 1875 2525 1575 2525 \r\n",
       "Q 1275 2525 1025 2275 \r\n",
       "Q 775 2025 775 1525 \r\n",
       "Q 775 1025 1025 775 \r\n",
       "Q 1275 525 1575 525 \r\n",
       "Q 1875 525 2125 775 \r\n",
       "Q 2375 1025 2375 1525 \r\n",
       "z\r\n",
       "\" id=\"SimHei-6f\" transform=\"scale(0.015625)\"/>\r\n",
       "       <path d=\"M 2500 2425 \r\n",
       "Q 2025 2500 1700 2287 \r\n",
       "Q 1375 2075 1150 1550 \r\n",
       "L 1150 125 \r\n",
       "L 650 125 \r\n",
       "L 650 2925 \r\n",
       "L 1150 2925 \r\n",
       "L 1150 2200 \r\n",
       "Q 1375 2600 1712 2787 \r\n",
       "Q 2050 2975 2500 2975 \r\n",
       "L 2500 2425 \r\n",
       "z\r\n",
       "\" id=\"SimHei-72\" transform=\"scale(0.015625)\"/>\r\n",
       "       <path d=\"M 2750 125 \r\n",
       "L 2250 125 \r\n",
       "L 2250 500 \r\n",
       "Q 2100 275 1900 175 \r\n",
       "Q 1700 75 1425 75 \r\n",
       "Q 925 75 575 437 \r\n",
       "Q 225 800 225 1525 \r\n",
       "Q 225 2250 575 2625 \r\n",
       "Q 925 3000 1425 3000 \r\n",
       "Q 1700 3000 1900 2887 \r\n",
       "Q 2100 2775 2250 2550 \r\n",
       "L 2250 4400 \r\n",
       "L 2750 4400 \r\n",
       "L 2750 125 \r\n",
       "z\r\n",
       "M 2250 1525 \r\n",
       "Q 2250 2000 2037 2275 \r\n",
       "Q 1825 2550 1525 2550 \r\n",
       "Q 1150 2550 962 2275 \r\n",
       "Q 775 2000 775 1525 \r\n",
       "Q 775 1050 962 787 \r\n",
       "Q 1150 525 1525 525 \r\n",
       "Q 1825 525 2037 787 \r\n",
       "Q 2250 1050 2250 1525 \r\n",
       "z\r\n",
       "\" id=\"SimHei-64\" transform=\"scale(0.015625)\"/>\r\n",
       "      </defs>\r\n",
       "      <use xlink:href=\"#SimHei-78\"/>\r\n",
       "      <use x=\"50\" xlink:href=\"#SimHei-5f\"/>\r\n",
       "      <use x=\"100\" xlink:href=\"#SimHei-63\"/>\r\n",
       "      <use x=\"150\" xlink:href=\"#SimHei-6f\"/>\r\n",
       "      <use x=\"200\" xlink:href=\"#SimHei-6f\"/>\r\n",
       "      <use x=\"250\" xlink:href=\"#SimHei-72\"/>\r\n",
       "      <use x=\"300\" xlink:href=\"#SimHei-64\"/>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"matplotlib.axis_2\">\r\n",
       "    <g id=\"ytick_1\">\r\n",
       "     <g id=\"line2d_6\">\r\n",
       "      <defs>\r\n",
       "       <path d=\"M 0 0 \r\n",
       "L -3.5 0 \r\n",
       "\" id=\"m4236afc4dd\" style=\"stroke:#000000;stroke-width:0.8;\"/>\r\n",
       "      </defs>\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.403125\" xlink:href=\"#m4236afc4dd\" y=\"202.401818\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_7\">\r\n",
       "      <!-- 10 -->\r\n",
       "      <g transform=\"translate(19.403125 205.839318)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 1400 3600 \r\n",
       "Q 1075 3275 575 2975 \r\n",
       "L 575 3450 \r\n",
       "Q 1200 3875 1600 4450 \r\n",
       "L 1900 4450 \r\n",
       "L 1900 150 \r\n",
       "L 1400 150 \r\n",
       "L 1400 3600 \r\n",
       "z\r\n",
       "\" id=\"SimHei-31\" transform=\"scale(0.015625)\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#SimHei-31\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"ytick_2\">\r\n",
       "     <g id=\"line2d_7\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.403125\" xlink:href=\"#m4236afc4dd\" y=\"177.692727\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_8\">\r\n",
       "      <!-- 20 -->\r\n",
       "      <g transform=\"translate(19.403125 181.130227)scale(0.1 -0.1)\">\r\n",
       "       <use xlink:href=\"#SimHei-32\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"ytick_3\">\r\n",
       "     <g id=\"line2d_8\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.403125\" xlink:href=\"#m4236afc4dd\" y=\"152.983636\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_9\">\r\n",
       "      <!-- 30 -->\r\n",
       "      <g transform=\"translate(19.403125 156.421136)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 250 1225 \r\n",
       "L 700 1300 \r\n",
       "Q 800 975 1025 762 \r\n",
       "Q 1250 550 1587 562 \r\n",
       "Q 1925 575 2125 837 \r\n",
       "Q 2325 1100 2300 1437 \r\n",
       "Q 2275 1775 2037 1962 \r\n",
       "Q 1800 2150 1275 2225 \r\n",
       "L 1275 2550 \r\n",
       "Q 1800 2600 2037 2825 \r\n",
       "Q 2275 3050 2250 3412 \r\n",
       "Q 2225 3775 1925 3937 \r\n",
       "Q 1625 4100 1287 3975 \r\n",
       "Q 950 3850 750 3275 \r\n",
       "L 300 3350 \r\n",
       "Q 450 3800 712 4100 \r\n",
       "Q 975 4400 1425 4450 \r\n",
       "Q 1875 4500 2212 4337 \r\n",
       "Q 2550 4175 2687 3837 \r\n",
       "Q 2825 3500 2725 3100 \r\n",
       "Q 2625 2700 2150 2400 \r\n",
       "Q 2500 2250 2687 1950 \r\n",
       "Q 2875 1650 2812 1162 \r\n",
       "Q 2750 675 2375 375 \r\n",
       "Q 2000 75 1525 87 \r\n",
       "Q 1050 100 700 387 \r\n",
       "Q 350 675 250 1225 \r\n",
       "z\r\n",
       "\" id=\"SimHei-33\" transform=\"scale(0.015625)\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#SimHei-33\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"ytick_4\">\r\n",
       "     <g id=\"line2d_9\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.403125\" xlink:href=\"#m4236afc4dd\" y=\"128.274545\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_10\">\r\n",
       "      <!-- 40 -->\r\n",
       "      <g transform=\"translate(19.403125 131.712045)scale(0.1 -0.1)\">\r\n",
       "       <use xlink:href=\"#SimHei-34\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"ytick_5\">\r\n",
       "     <g id=\"line2d_10\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.403125\" xlink:href=\"#m4236afc4dd\" y=\"103.565455\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_11\">\r\n",
       "      <!-- 50 -->\r\n",
       "      <g transform=\"translate(19.403125 107.002955)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 550 1325 \r\n",
       "Q 725 650 1150 575 \r\n",
       "Q 1575 500 1837 662 \r\n",
       "Q 2100 825 2212 1087 \r\n",
       "Q 2325 1350 2312 1675 \r\n",
       "Q 2300 2000 2137 2225 \r\n",
       "Q 1975 2450 1725 2525 \r\n",
       "Q 1475 2600 1162 2525 \r\n",
       "Q 850 2450 650 2175 \r\n",
       "L 225 2225 \r\n",
       "Q 275 2375 700 4375 \r\n",
       "L 2675 4375 \r\n",
       "L 2675 3925 \r\n",
       "L 1075 3925 \r\n",
       "Q 950 3250 825 2850 \r\n",
       "Q 1200 3025 1525 3012 \r\n",
       "Q 1850 3000 2150 2862 \r\n",
       "Q 2450 2725 2587 2487 \r\n",
       "Q 2725 2250 2787 2012 \r\n",
       "Q 2850 1775 2837 1500 \r\n",
       "Q 2825 1225 2725 937 \r\n",
       "Q 2625 650 2425 462 \r\n",
       "Q 2225 275 1937 162 \r\n",
       "Q 1650 50 1275 75 \r\n",
       "Q 900 100 562 350 \r\n",
       "Q 225 600 100 1200 \r\n",
       "L 550 1325 \r\n",
       "z\r\n",
       "\" id=\"SimHei-35\" transform=\"scale(0.015625)\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#SimHei-35\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"ytick_6\">\r\n",
       "     <g id=\"line2d_11\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.403125\" xlink:href=\"#m4236afc4dd\" y=\"78.856364\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_12\">\r\n",
       "      <!-- 60 -->\r\n",
       "      <g transform=\"translate(19.403125 82.293864)scale(0.1 -0.1)\">\r\n",
       "       <use xlink:href=\"#SimHei-36\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"ytick_7\">\r\n",
       "     <g id=\"line2d_12\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.403125\" xlink:href=\"#m4236afc4dd\" y=\"54.147273\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_13\">\r\n",
       "      <!-- 70 -->\r\n",
       "      <g transform=\"translate(19.403125 57.584773)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 850 150 \r\n",
       "Q 1300 2050 2425 3925 \r\n",
       "L 275 3925 \r\n",
       "L 275 4375 \r\n",
       "L 2950 4375 \r\n",
       "L 2950 3950 \r\n",
       "Q 1775 2050 1400 150 \r\n",
       "L 850 150 \r\n",
       "z\r\n",
       "\" id=\"SimHei-37\" transform=\"scale(0.015625)\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#SimHei-37\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"ytick_8\">\r\n",
       "     <g id=\"line2d_13\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.403125\" xlink:href=\"#m4236afc4dd\" y=\"29.438182\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_14\">\r\n",
       "      <!-- 80 -->\r\n",
       "      <g transform=\"translate(19.403125 32.875682)scale(0.1 -0.1)\">\r\n",
       "       <use xlink:href=\"#SimHei-38\"/>\r\n",
       "       <use x=\"50\" xlink:href=\"#SimHei-30\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"text_15\">\r\n",
       "     <!-- y_coord -->\r\n",
       "     <g transform=\"translate(14.075 133.42)rotate(-90)scale(0.1 -0.1)\">\r\n",
       "      <defs>\r\n",
       "       <path d=\"M 2900 2925 \r\n",
       "L 1750 -100 \r\n",
       "Q 1650 -450 1450 -625 \r\n",
       "Q 1250 -800 950 -800 \r\n",
       "Q 825 -800 712 -787 \r\n",
       "Q 600 -775 500 -725 \r\n",
       "L 500 -225 \r\n",
       "Q 600 -275 700 -300 \r\n",
       "Q 800 -325 875 -325 \r\n",
       "Q 1075 -325 1150 -262 \r\n",
       "Q 1225 -200 1300 25 \r\n",
       "L 200 2925 \r\n",
       "L 750 2925 \r\n",
       "L 1550 725 \r\n",
       "L 1575 725 \r\n",
       "L 2350 2925 \r\n",
       "L 2900 2925 \r\n",
       "z\r\n",
       "\" id=\"SimHei-79\" transform=\"scale(0.015625)\"/>\r\n",
       "      </defs>\r\n",
       "      <use xlink:href=\"#SimHei-79\"/>\r\n",
       "      <use x=\"50\" xlink:href=\"#SimHei-5f\"/>\r\n",
       "      <use x=\"100\" xlink:href=\"#SimHei-63\"/>\r\n",
       "      <use x=\"150\" xlink:href=\"#SimHei-6f\"/>\r\n",
       "      <use x=\"200\" xlink:href=\"#SimHei-6f\"/>\r\n",
       "      <use x=\"250\" xlink:href=\"#SimHei-72\"/>\r\n",
       "      <use x=\"300\" xlink:href=\"#SimHei-64\"/>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_14\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 102.882551 128.274545 \r\n",
       "L 83.659584 128.274545 \r\n",
       "L 77.251929 128.274545 \r\n",
       "L 102.882551 128.274545 \r\n",
       "\" style=\"fill:none;stroke:#ffa500;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <defs>\r\n",
       "     <path d=\"M 0 2.5 \r\n",
       "C 0.663008 2.5 1.29895 2.236584 1.767767 1.767767 \r\n",
       "C 2.236584 1.29895 2.5 0.663008 2.5 0 \r\n",
       "C 2.5 -0.663008 2.236584 -1.29895 1.767767 -1.767767 \r\n",
       "C 1.29895 -2.236584 0.663008 -2.5 0 -2.5 \r\n",
       "C -0.663008 -2.5 -1.29895 -2.236584 -1.767767 -1.767767 \r\n",
       "C -2.236584 -1.29895 -2.5 -0.663008 -2.5 0 \r\n",
       "C -2.5 0.663008 -2.236584 1.29895 -1.767767 1.767767 \r\n",
       "C -1.29895 2.236584 -0.663008 2.5 0 2.5 \r\n",
       "z\r\n",
       "\" id=\"m4c67120da6\" style=\"stroke:#ffa500;\"/>\r\n",
       "    </defs>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"102.882551\" xlink:href=\"#m4c67120da6\" y=\"128.274545\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"83.659584\" xlink:href=\"#m4c67120da6\" y=\"128.274545\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"77.251929\" xlink:href=\"#m4c67120da6\" y=\"128.274545\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"102.882551\" xlink:href=\"#m4c67120da6\" y=\"128.274545\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_15\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 179.774417 103.565455 \r\n",
       "L 179.774417 64.030909 \r\n",
       "L 173.366761 59.089091 \r\n",
       "L 163.755278 56.618182 \r\n",
       "L 173.366761 54.147273 \r\n",
       "L 179.774417 56.618182 \r\n",
       "L 179.774417 103.565455 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <defs>\r\n",
       "     <path d=\"M 0 2.5 \r\n",
       "C 0.663008 2.5 1.29895 2.236584 1.767767 1.767767 \r\n",
       "C 2.236584 1.29895 2.5 0.663008 2.5 0 \r\n",
       "C 2.5 -0.663008 2.236584 -1.29895 1.767767 -1.767767 \r\n",
       "C 1.29895 -2.236584 0.663008 -2.5 0 -2.5 \r\n",
       "C -0.663008 -2.5 -1.29895 -2.236584 -1.767767 -1.767767 \r\n",
       "C -2.236584 -1.29895 -2.5 -0.663008 -2.5 0 \r\n",
       "C -2.5 0.663008 -2.236584 1.29895 -1.767767 1.767767 \r\n",
       "C -1.29895 2.236584 -0.663008 2.5 0 2.5 \r\n",
       "z\r\n",
       "\" id=\"m76f8514014\" style=\"stroke:#000000;\"/>\r\n",
       "    </defs>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"103.565455\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"64.030909\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"173.366761\" xlink:href=\"#m76f8514014\" y=\"59.089091\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"163.755278\" xlink:href=\"#m76f8514014\" y=\"56.618182\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"173.366761\" xlink:href=\"#m76f8514014\" y=\"54.147273\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"56.618182\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"103.565455\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_16\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 102.882551 128.274545 \r\n",
       "L 58.028962 128.274545 \r\n",
       "L 51.621307 128.274545 \r\n",
       "L 51.621307 115.92 \r\n",
       "L 67.640446 115.92 \r\n",
       "L 102.882551 128.274545 \r\n",
       "\" style=\"fill:none;stroke:#ffa500;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"102.882551\" xlink:href=\"#m4c67120da6\" y=\"128.274545\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"58.028962\" xlink:href=\"#m4c67120da6\" y=\"128.274545\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"51.621307\" xlink:href=\"#m4c67120da6\" y=\"128.274545\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"51.621307\" xlink:href=\"#m4c67120da6\" y=\"115.92\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"67.640446\" xlink:href=\"#m4c67120da6\" y=\"115.92\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"102.882551\" xlink:href=\"#m4c67120da6\" y=\"128.274545\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_17\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 179.774417 155.454545 \r\n",
       "L 186.182072 190.047273 \r\n",
       "L 186.182072 202.401818 \r\n",
       "L 163.755278 214.756364 \r\n",
       "L 173.366761 190.047273 \r\n",
       "L 179.774417 155.454545 \r\n",
       "\" style=\"fill:none;stroke:#0000ff;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <defs>\r\n",
       "     <path d=\"M 0 2.5 \r\n",
       "C 0.663008 2.5 1.29895 2.236584 1.767767 1.767767 \r\n",
       "C 2.236584 1.29895 2.5 0.663008 2.5 0 \r\n",
       "C 2.5 -0.663008 2.236584 -1.29895 1.767767 -1.767767 \r\n",
       "C 1.29895 -2.236584 0.663008 -2.5 0 -2.5 \r\n",
       "C -0.663008 -2.5 -1.29895 -2.236584 -1.767767 -1.767767 \r\n",
       "C -2.236584 -1.29895 -2.5 -0.663008 -2.5 0 \r\n",
       "C -2.5 0.663008 -2.236584 1.29895 -1.767767 1.767767 \r\n",
       "C -1.29895 2.236584 -0.663008 2.5 0 2.5 \r\n",
       "z\r\n",
       "\" id=\"m6afd22408f\" style=\"stroke:#0000ff;\"/>\r\n",
       "    </defs>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"179.774417\" xlink:href=\"#m6afd22408f\" y=\"155.454545\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"186.182072\" xlink:href=\"#m6afd22408f\" y=\"190.047273\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"186.182072\" xlink:href=\"#m6afd22408f\" y=\"202.401818\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"163.755278\" xlink:href=\"#m6afd22408f\" y=\"214.756364\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"173.366761\" xlink:href=\"#m6afd22408f\" y=\"190.047273\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"179.774417\" xlink:href=\"#m6afd22408f\" y=\"155.454545\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_18\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 102.882551 128.274545 \r\n",
       "L 83.659584 140.629091 \r\n",
       "L 67.640446 140.629091 \r\n",
       "L 77.251929 115.92 \r\n",
       "L 102.882551 128.274545 \r\n",
       "\" style=\"fill:none;stroke:#ffa500;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"102.882551\" xlink:href=\"#m4c67120da6\" y=\"128.274545\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"83.659584\" xlink:href=\"#m4c67120da6\" y=\"140.629091\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"67.640446\" xlink:href=\"#m4c67120da6\" y=\"140.629091\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"77.251929\" xlink:href=\"#m4c67120da6\" y=\"115.92\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"102.882551\" xlink:href=\"#m4c67120da6\" y=\"128.274545\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_19\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 102.882551 128.274545 \r\n",
       "L 109.290206 41.792727 \r\n",
       "L 99.678723 41.792727 \r\n",
       "L 99.678723 29.438182 \r\n",
       "L 115.697862 91.210909 \r\n",
       "L 102.882551 128.274545 \r\n",
       "\" style=\"fill:none;stroke:#ffa500;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"102.882551\" xlink:href=\"#m4c67120da6\" y=\"128.274545\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"109.290206\" xlink:href=\"#m4c67120da6\" y=\"41.792727\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"99.678723\" xlink:href=\"#m4c67120da6\" y=\"41.792727\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"99.678723\" xlink:href=\"#m4c67120da6\" y=\"29.438182\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"115.697862\" xlink:href=\"#m4c67120da6\" y=\"91.210909\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"102.882551\" xlink:href=\"#m4c67120da6\" y=\"128.274545\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_20\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 102.882551 128.274545 \r\n",
       "L 131.717001 103.565455 \r\n",
       "L 131.717001 98.623636 \r\n",
       "L 125.309345 98.623636 \r\n",
       "L 115.697862 103.565455 \r\n",
       "L 102.882551 128.274545 \r\n",
       "\" style=\"fill:none;stroke:#ffa500;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"102.882551\" xlink:href=\"#m4c67120da6\" y=\"128.274545\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"131.717001\" xlink:href=\"#m4c67120da6\" y=\"103.565455\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"131.717001\" xlink:href=\"#m4c67120da6\" y=\"98.623636\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"125.309345\" xlink:href=\"#m4c67120da6\" y=\"98.623636\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"115.697862\" xlink:href=\"#m4c67120da6\" y=\"103.565455\"/>\r\n",
       "     <use style=\"fill:#ffa500;stroke:#ffa500;\" x=\"102.882551\" xlink:href=\"#m4c67120da6\" y=\"128.274545\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_21\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 179.774417 103.565455 \r\n",
       "L 243.850972 29.438182 \r\n",
       "L 259.870111 24.496364 \r\n",
       "L 266.277766 17.083636 \r\n",
       "L 259.870111 17.083636 \r\n",
       "L 179.774417 103.565455 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"103.565455\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"243.850972\" xlink:href=\"#m76f8514014\" y=\"29.438182\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"259.870111\" xlink:href=\"#m76f8514014\" y=\"24.496364\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"266.277766\" xlink:href=\"#m76f8514014\" y=\"17.083636\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"259.870111\" xlink:href=\"#m76f8514014\" y=\"17.083636\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"103.565455\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_22\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 179.774417 103.565455 \r\n",
       "L 250.258627 29.438182 \r\n",
       "L 243.850972 78.856364 \r\n",
       "L 195.793556 66.501818 \r\n",
       "L 179.774417 103.565455 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"103.565455\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"250.258627\" xlink:href=\"#m76f8514014\" y=\"29.438182\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"243.850972\" xlink:href=\"#m76f8514014\" y=\"78.856364\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"195.793556\" xlink:href=\"#m76f8514014\" y=\"66.501818\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"103.565455\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_23\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 179.774417 103.565455 \r\n",
       "L 186.182072 66.501818 \r\n",
       "L 186.182072 64.030909 \r\n",
       "L 186.182072 59.089091 \r\n",
       "L 195.793556 54.147273 \r\n",
       "L 195.793556 59.089091 \r\n",
       "L 179.774417 103.565455 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"103.565455\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"186.182072\" xlink:href=\"#m76f8514014\" y=\"66.501818\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"186.182072\" xlink:href=\"#m76f8514014\" y=\"64.030909\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"186.182072\" xlink:href=\"#m76f8514014\" y=\"59.089091\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"195.793556\" xlink:href=\"#m76f8514014\" y=\"54.147273\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"195.793556\" xlink:href=\"#m76f8514014\" y=\"59.089091\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"103.565455\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_24\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 179.774417 103.565455 \r\n",
       "L 243.850972 91.210909 \r\n",
       "L 263.073938 91.210909 \r\n",
       "L 282.296905 91.210909 \r\n",
       "L 291.908388 91.210909 \r\n",
       "L 259.870111 78.856364 \r\n",
       "L 179.774417 103.565455 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"103.565455\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"243.850972\" xlink:href=\"#m76f8514014\" y=\"91.210909\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"263.073938\" xlink:href=\"#m76f8514014\" y=\"91.210909\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"282.296905\" xlink:href=\"#m76f8514014\" y=\"91.210909\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"291.908388\" xlink:href=\"#m76f8514014\" y=\"91.210909\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"259.870111\" xlink:href=\"#m76f8514014\" y=\"78.856364\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"103.565455\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_25\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 179.774417 103.565455 \r\n",
       "L 147.736139 103.565455 \r\n",
       "L 125.309345 91.210909 \r\n",
       "L 131.717001 91.210909 \r\n",
       "L 141.328484 98.623636 \r\n",
       "L 147.736139 98.623636 \r\n",
       "L 179.774417 103.565455 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"103.565455\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"147.736139\" xlink:href=\"#m76f8514014\" y=\"103.565455\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"125.309345\" xlink:href=\"#m76f8514014\" y=\"91.210909\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"131.717001\" xlink:href=\"#m76f8514014\" y=\"91.210909\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"141.328484\" xlink:href=\"#m76f8514014\" y=\"98.623636\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"147.736139\" xlink:href=\"#m76f8514014\" y=\"98.623636\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"103.565455\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_26\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 179.774417 155.454545 \r\n",
       "L 323.946666 140.629091 \r\n",
       "L 346.37346 152.983636 \r\n",
       "L 333.558149 152.983636 \r\n",
       "L 330.354321 152.983636 \r\n",
       "L 323.946666 165.338182 \r\n",
       "L 179.774417 155.454545 \r\n",
       "\" style=\"fill:none;stroke:#0000ff;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"179.774417\" xlink:href=\"#m6afd22408f\" y=\"155.454545\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"323.946666\" xlink:href=\"#m6afd22408f\" y=\"140.629091\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"346.37346\" xlink:href=\"#m6afd22408f\" y=\"152.983636\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"333.558149\" xlink:href=\"#m6afd22408f\" y=\"152.983636\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"330.354321\" xlink:href=\"#m6afd22408f\" y=\"152.983636\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"323.946666\" xlink:href=\"#m6afd22408f\" y=\"165.338182\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"179.774417\" xlink:href=\"#m6afd22408f\" y=\"155.454545\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_27\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 179.774417 103.565455 \r\n",
       "L 259.870111 91.210909 \r\n",
       "L 275.889249 83.798182 \r\n",
       "L 269.481594 78.856364 \r\n",
       "L 253.462455 83.798182 \r\n",
       "L 179.774417 103.565455 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"103.565455\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"259.870111\" xlink:href=\"#m76f8514014\" y=\"91.210909\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"275.889249\" xlink:href=\"#m76f8514014\" y=\"83.798182\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"269.481594\" xlink:href=\"#m76f8514014\" y=\"78.856364\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"253.462455\" xlink:href=\"#m76f8514014\" y=\"83.798182\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"103.565455\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_28\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 179.774417 103.565455 \r\n",
       "L 237.443316 41.792727 \r\n",
       "L 243.850972 17.083636 \r\n",
       "L 227.831833 17.083636 \r\n",
       "L 227.831833 29.438182 \r\n",
       "L 179.774417 103.565455 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"103.565455\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"237.443316\" xlink:href=\"#m76f8514014\" y=\"41.792727\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"243.850972\" xlink:href=\"#m76f8514014\" y=\"17.083636\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"227.831833\" xlink:href=\"#m76f8514014\" y=\"17.083636\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"227.831833\" xlink:href=\"#m76f8514014\" y=\"29.438182\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"103.565455\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_29\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 179.774417 103.565455 \r\n",
       "L 122.105517 41.792727 \r\n",
       "L 115.697862 29.438182 \r\n",
       "L 141.328484 91.210909 \r\n",
       "L 179.774417 103.565455 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"103.565455\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"122.105517\" xlink:href=\"#m76f8514014\" y=\"41.792727\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"115.697862\" xlink:href=\"#m76f8514014\" y=\"29.438182\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"141.328484\" xlink:href=\"#m76f8514014\" y=\"91.210909\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"103.565455\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_30\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 179.774417 103.565455 \r\n",
       "L 163.755278 64.030909 \r\n",
       "L 115.697862 17.083636 \r\n",
       "L 122.105517 17.083636 \r\n",
       "L 131.717001 17.083636 \r\n",
       "L 179.774417 103.565455 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"103.565455\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"163.755278\" xlink:href=\"#m76f8514014\" y=\"64.030909\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"115.697862\" xlink:href=\"#m76f8514014\" y=\"17.083636\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"122.105517\" xlink:href=\"#m76f8514014\" y=\"17.083636\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"131.717001\" xlink:href=\"#m76f8514014\" y=\"17.083636\"/>\r\n",
       "     <use style=\"stroke:#000000;\" x=\"179.774417\" xlink:href=\"#m76f8514014\" y=\"103.565455\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_31\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 179.774417 155.454545 \r\n",
       "L 192.589728 214.756364 \r\n",
       "L 179.774417 214.756364 \r\n",
       "L 173.366761 214.756364 \r\n",
       "L 179.774417 155.454545 \r\n",
       "\" style=\"fill:none;stroke:#0000ff;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"179.774417\" xlink:href=\"#m6afd22408f\" y=\"155.454545\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"192.589728\" xlink:href=\"#m6afd22408f\" y=\"214.756364\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"179.774417\" xlink:href=\"#m6afd22408f\" y=\"214.756364\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"173.366761\" xlink:href=\"#m6afd22408f\" y=\"214.756364\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"179.774417\" xlink:href=\"#m6afd22408f\" y=\"155.454545\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_32\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 179.774417 155.454545 \r\n",
       "L 163.755278 152.983636 \r\n",
       "L 154.143795 152.983636 \r\n",
       "L 147.736139 152.983636 \r\n",
       "L 141.328484 152.983636 \r\n",
       "L 131.717001 152.983636 \r\n",
       "L 131.717001 140.629091 \r\n",
       "L 141.328484 140.629091 \r\n",
       "L 147.736139 140.629091 \r\n",
       "L 179.774417 155.454545 \r\n",
       "\" style=\"fill:none;stroke:#0000ff;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"179.774417\" xlink:href=\"#m6afd22408f\" y=\"155.454545\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"163.755278\" xlink:href=\"#m6afd22408f\" y=\"152.983636\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"154.143795\" xlink:href=\"#m6afd22408f\" y=\"152.983636\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"147.736139\" xlink:href=\"#m6afd22408f\" y=\"152.983636\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"141.328484\" xlink:href=\"#m6afd22408f\" y=\"152.983636\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"131.717001\" xlink:href=\"#m6afd22408f\" y=\"152.983636\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"131.717001\" xlink:href=\"#m6afd22408f\" y=\"140.629091\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"141.328484\" xlink:href=\"#m6afd22408f\" y=\"140.629091\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"147.736139\" xlink:href=\"#m6afd22408f\" y=\"140.629091\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"179.774417\" xlink:href=\"#m6afd22408f\" y=\"155.454545\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_33\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 179.774417 155.454545 \r\n",
       "L 157.347623 140.629091 \r\n",
       "L 157.347623 148.041818 \r\n",
       "L 163.755278 148.041818 \r\n",
       "L 147.736139 148.041818 \r\n",
       "L 134.920828 148.041818 \r\n",
       "L 179.774417 155.454545 \r\n",
       "\" style=\"fill:none;stroke:#0000ff;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"179.774417\" xlink:href=\"#m6afd22408f\" y=\"155.454545\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"157.347623\" xlink:href=\"#m6afd22408f\" y=\"140.629091\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"157.347623\" xlink:href=\"#m6afd22408f\" y=\"148.041818\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"163.755278\" xlink:href=\"#m6afd22408f\" y=\"148.041818\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"147.736139\" xlink:href=\"#m6afd22408f\" y=\"148.041818\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"134.920828\" xlink:href=\"#m6afd22408f\" y=\"148.041818\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"179.774417\" xlink:href=\"#m6afd22408f\" y=\"155.454545\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_34\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 179.774417 155.454545 \r\n",
       "L 333.558149 140.629091 \r\n",
       "L 339.965804 140.629091 \r\n",
       "L 355.984943 140.629091 \r\n",
       "L 355.984943 152.983636 \r\n",
       "L 179.774417 155.454545 \r\n",
       "\" style=\"fill:none;stroke:#0000ff;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"179.774417\" xlink:href=\"#m6afd22408f\" y=\"155.454545\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"333.558149\" xlink:href=\"#m6afd22408f\" y=\"140.629091\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"339.965804\" xlink:href=\"#m6afd22408f\" y=\"140.629091\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"355.984943\" xlink:href=\"#m6afd22408f\" y=\"140.629091\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"355.984943\" xlink:href=\"#m6afd22408f\" y=\"152.983636\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"179.774417\" xlink:href=\"#m6afd22408f\" y=\"155.454545\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_35\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 179.774417 155.454545 \r\n",
       "L 179.774417 190.047273 \r\n",
       "L 221.424178 152.983636 \r\n",
       "L 211.812694 152.983636 \r\n",
       "L 205.405039 152.983636 \r\n",
       "L 195.793556 152.983636 \r\n",
       "L 179.774417 155.454545 \r\n",
       "\" style=\"fill:none;stroke:#0000ff;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"179.774417\" xlink:href=\"#m6afd22408f\" y=\"155.454545\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"179.774417\" xlink:href=\"#m6afd22408f\" y=\"190.047273\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"221.424178\" xlink:href=\"#m6afd22408f\" y=\"152.983636\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"211.812694\" xlink:href=\"#m6afd22408f\" y=\"152.983636\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"205.405039\" xlink:href=\"#m6afd22408f\" y=\"152.983636\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"195.793556\" xlink:href=\"#m6afd22408f\" y=\"152.983636\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"179.774417\" xlink:href=\"#m6afd22408f\" y=\"155.454545\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_36\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 179.774417 155.454545 \r\n",
       "L 211.812694 140.629091 \r\n",
       "L 221.424178 140.629091 \r\n",
       "L 202.201211 140.629091 \r\n",
       "L 179.774417 155.454545 \r\n",
       "\" style=\"fill:none;stroke:#0000ff;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"179.774417\" xlink:href=\"#m6afd22408f\" y=\"155.454545\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"211.812694\" xlink:href=\"#m6afd22408f\" y=\"140.629091\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"221.424178\" xlink:href=\"#m6afd22408f\" y=\"140.629091\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"202.201211\" xlink:href=\"#m6afd22408f\" y=\"140.629091\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"179.774417\" xlink:href=\"#m6afd22408f\" y=\"155.454545\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_37\">\r\n",
       "    <path clip-path=\"url(#p45bcc6f828)\" d=\"M 179.774417 155.454545 \r\n",
       "L 202.201211 128.274545 \r\n",
       "L 205.405039 128.274545 \r\n",
       "L 211.812694 128.274545 \r\n",
       "L 195.793556 140.629091 \r\n",
       "L 179.774417 155.454545 \r\n",
       "\" style=\"fill:none;stroke:#0000ff;stroke-linecap:square;stroke-width:0.5;\"/>\r\n",
       "    <g clip-path=\"url(#p45bcc6f828)\">\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"179.774417\" xlink:href=\"#m6afd22408f\" y=\"155.454545\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"202.201211\" xlink:href=\"#m6afd22408f\" y=\"128.274545\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"205.405039\" xlink:href=\"#m6afd22408f\" y=\"128.274545\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"211.812694\" xlink:href=\"#m6afd22408f\" y=\"128.274545\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"195.793556\" xlink:href=\"#m6afd22408f\" y=\"140.629091\"/>\r\n",
       "     <use style=\"fill:#0000ff;stroke:#0000ff;\" x=\"179.774417\" xlink:href=\"#m6afd22408f\" y=\"155.454545\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"patch_3\">\r\n",
       "    <path d=\"M 36.403125 224.64 \r\n",
       "L 36.403125 7.2 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\r\n",
       "   </g>\r\n",
       "   <g id=\"patch_4\">\r\n",
       "    <path d=\"M 371.203125 224.64 \r\n",
       "L 371.203125 7.2 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\r\n",
       "   </g>\r\n",
       "   <g id=\"patch_5\">\r\n",
       "    <path d=\"M 36.403125 224.64 \r\n",
       "L 371.203125 224.64 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\r\n",
       "   </g>\r\n",
       "   <g id=\"patch_6\">\r\n",
       "    <path d=\"M 36.403125 7.2 \r\n",
       "L 371.203125 7.2 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\r\n",
       "   </g>\r\n",
       "  </g>\r\n",
       " </g>\r\n",
       " <defs>\r\n",
       "  <clipPath id=\"p45bcc6f828\">\r\n",
       "   <rect height=\"217.44\" width=\"334.8\" x=\"36.403125\" y=\"7.2\"/>\r\n",
       "  </clipPath>\r\n",
       " </defs>\r\n",
       "</svg>\r\n"
      ],
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "random destory weight is 13.969\tselect is 374.0\tscore is 5520.000\n",
      "worse destory weight is 12.914\tselect is 426.0\tscore is 6630.000 \n",
      "random repair weight is 0.000\tselect is 5.0\tscore is 100.000\n",
      "greedy repair weight is 13.584\tselect is 610.0\tscore is 9070.000\n",
      "regret repair weight is 0.000\tselect is 185.0\tscore is 2980.000\n",
      "The time used to execute this is given below\n",
      "22725.356429576874\n"
     ]
    }
   ],
   "source": [
    "import math\n",
    "import random\n",
    "import numpy as np\n",
    "import copy\n",
    "import xlsxwriter\n",
    "import matplotlib.pyplot as plt\n",
    "import csv\n",
    "import sys\n",
    "import time\n",
    "%matplotlib inline\n",
    "%config InlineBackend.figure_format = 'svg'\n",
    "\n",
    "start = time.time()\n",
    "\n",
    "\n",
    "class Sol():\n",
    "    def __init__(self):\n",
    "        self.obj=None\n",
    "        self.node_id_list=[]\n",
    "        self.cost_of_distance=None\n",
    "        self.cost_of_time=None\n",
    "        self.action_id=None\n",
    "        self.route_list=[]\n",
    "        self.timetable_list=[]\n",
    "\n",
    "class Node():\n",
    "    def __init__(self):\n",
    "        self.id=0\n",
    "        self.x_coord=0\n",
    "        self.y_cooord=0\n",
    "        self.demand=0\n",
    "        self.depot_capacity=0\n",
    "        self.start_time=0\n",
    "        self.end_time=1440\n",
    "        self.service_time=0\n",
    "\n",
    "class Model():\n",
    "    def __init__(self):\n",
    "        self.best_sol=None\n",
    "        self.demand_dict={}\n",
    "        self.depot_dict={}\n",
    "        self.depot_id_list=[]\n",
    "        self.demand_id_list=[]\n",
    "        self.distance_matrix={}\n",
    "        self.time_matrix={}\n",
    "        self.number_of_demands=0\n",
    "        self.vehicle_cap=0\n",
    "        self.vehicle_speed=1\n",
    "        self.rand_d_max = 0.4\n",
    "        self.rand_d_min = 0.1\n",
    "        self.worst_d_max = 5\n",
    "        self.worst_d_min = 20\n",
    "        self.regret_n = 5\n",
    "        self.r1 = 30\n",
    "        self.r2 = 18\n",
    "        self.r3 = 12\n",
    "        self.rho = 0.6\n",
    "        self.d_weight = np.ones(2) * 10\n",
    "        self.d_select = np.zeros(2)\n",
    "        self.d_score = np.zeros(2)\n",
    "        self.d_history_select = np.zeros(2)\n",
    "        self.d_history_score = np.zeros(2)\n",
    "        self.r_weight = np.ones(3) * 10\n",
    "        self.r_select = np.zeros(3)\n",
    "        self.r_score = np.zeros(3)\n",
    "        self.r_history_select = np.zeros(3)\n",
    "        self.r_history_score = np.zeros(3)\n",
    "        self.opt_type=1\n",
    "\n",
    "\n",
    "def readCSVFile(demand_file,depot_file,model):\n",
    "    with open(demand_file,'r') as f:\n",
    "        demand_reader=csv.DictReader(f)\n",
    "        for row in demand_reader:\n",
    "            node = Node()\n",
    "            node.id = int(row['id'])\n",
    "            node.x_coord = float(row['x_coord'])\n",
    "            node.y_coord = float(row['y_coord'])\n",
    "            node.demand = float(row['demand'])\n",
    "            node.start_time=float(row['start_time'])\n",
    "            node.end_time=float(row['end_time'])\n",
    "            node.service_time=float(row['service_time'])\n",
    "            model.demand_dict[node.id] = node\n",
    "            model.demand_id_list.append(node.id)\n",
    "        model.number_of_demands=len(model.demand_id_list)\n",
    "\n",
    "    with open(depot_file, 'r') as f:\n",
    "        depot_reader = csv.DictReader(f)\n",
    "        for row in depot_reader:\n",
    "            node = Node()\n",
    "            node.id = row['id']\n",
    "            node.x_coord = float(row['x_coord'])\n",
    "            node.y_coord = float(row['y_coord'])\n",
    "            node.depot_capacity = float(row['capacity'])\n",
    "            node.start_time=float(row['start_time'])\n",
    "            node.end_time=float(row['end_time'])\n",
    "            model.depot_dict[node.id] = node\n",
    "            model.depot_id_list.append(node.id)\n",
    "\n",
    "def calDistanceTimeMatrix(model):\n",
    "    for i in range(len(model.demand_id_list)):\n",
    "        from_node_id = model.demand_id_list[i]\n",
    "        for j in range(i + 1, len(model.demand_id_list)):\n",
    "            to_node_id = model.demand_id_list[j]\n",
    "            dist = math.sqrt((model.demand_dict[from_node_id].x_coord - model.demand_dict[to_node_id].x_coord) ** 2\n",
    "                             + (model.demand_dict[from_node_id].y_coord - model.demand_dict[to_node_id].y_coord) ** 2)\n",
    "            model.distance_matrix[from_node_id, to_node_id] = dist\n",
    "            model.distance_matrix[to_node_id, from_node_id] = dist\n",
    "            model.time_matrix[from_node_id,to_node_id] = math.ceil(dist/model.vehicle_speed)\n",
    "            model.time_matrix[to_node_id,from_node_id] = math.ceil(dist/model.vehicle_speed)\n",
    "        for _, depot in model.depot_dict.items():\n",
    "            dist = math.sqrt((model.demand_dict[from_node_id].x_coord - depot.x_coord) ** 2\n",
    "                             + (model.demand_dict[from_node_id].y_coord - depot.y_coord) ** 2)\n",
    "            model.distance_matrix[from_node_id, depot.id] = dist\n",
    "            model.distance_matrix[depot.id, from_node_id] = dist\n",
    "            model.time_matrix[from_node_id,depot.id] = math.ceil(dist/model.vehicle_speed)\n",
    "            model.time_matrix[depot.id,from_node_id] = math.ceil(dist/model.vehicle_speed)\n",
    "\n",
    "def selectDepot(route,depot_dict,model):\n",
    "    min_in_out_distance=float('inf')\n",
    "    index=None\n",
    "    for _,depot in depot_dict.items():\n",
    "        if depot.depot_capacity>0:\n",
    "            in_out_distance=model.distance_matrix[depot.id,route[0]]+model.distance_matrix[route[-1],depot.id]\n",
    "            if in_out_distance<min_in_out_distance:\n",
    "                index=depot.id\n",
    "                min_in_out_distance=in_out_distance\n",
    "    if index is None:\n",
    "        print(\"there is no vehicle to dispatch\")\n",
    "        sys.exit(0)\n",
    "    route.insert(0,index)\n",
    "    route.append(index)\n",
    "    depot_dict[index].depot_capacity=depot_dict[index].depot_capacity-1\n",
    "    return route,depot_dict\n",
    "\n",
    "def calTravelCost(route_list,model):\n",
    "    timetable_list=[]\n",
    "    cost_of_distance=0\n",
    "    cost_of_time=0\n",
    "    for route in route_list:\n",
    "        timetable=[]\n",
    "        for i in range(len(route)):\n",
    "            if i == 0:\n",
    "                depot_id=route[i]\n",
    "                next_node_id=route[i+1]\n",
    "                travel_time=model.time_matrix[depot_id,next_node_id]\n",
    "                departure=max(0,model.demand_dict[next_node_id].start_time-travel_time)\n",
    "                timetable.append((departure,departure))\n",
    "            elif 1<= i <= len(route)-2:\n",
    "                last_node_id=route[i-1]\n",
    "                current_node_id=route[i]\n",
    "                current_node = model.demand_dict[current_node_id]\n",
    "                travel_time=model.time_matrix[last_node_id,current_node_id]\n",
    "                arrival=max(timetable[-1][1]+travel_time,current_node.start_time)\n",
    "                departure=arrival+current_node.service_time\n",
    "                timetable.append((arrival,departure))\n",
    "                cost_of_distance += model.distance_matrix[last_node_id, current_node_id]\n",
    "                cost_of_time += model.time_matrix[last_node_id, current_node_id]+ current_node.service_time\\\n",
    "                                + max(current_node.start_time - timetable[-1][1] - travel_time, 0)\n",
    "            else:\n",
    "                last_node_id = route[i - 1]\n",
    "                depot_id=route[i]\n",
    "                travel_time = model.time_matrix[last_node_id,depot_id]\n",
    "                departure = timetable[-1][1]+travel_time\n",
    "                timetable.append((departure,departure))\n",
    "                cost_of_distance +=model.distance_matrix[last_node_id,depot_id]\n",
    "                cost_of_time+=model.time_matrix[last_node_id,depot_id]\n",
    "        timetable_list.append(timetable)\n",
    "    return timetable_list,cost_of_time,cost_of_distance\n",
    "\n",
    "def extractRoutes(node_id_list,Pred,model):\n",
    "    depot_dict=copy.deepcopy(model.depot_dict)\n",
    "    route_list = []\n",
    "    route = []\n",
    "    label = Pred[node_id_list[0]]\n",
    "    for node_id in node_id_list:\n",
    "        if Pred[node_id] == label:\n",
    "            route.append(node_id)\n",
    "        else:\n",
    "            route, depot_dict=selectDepot(route,depot_dict,model)\n",
    "            route_list.append(route)\n",
    "            route = [node_id]\n",
    "            label = Pred[node_id]\n",
    "    route, depot_dict = selectDepot(route, depot_dict, model)\n",
    "    route_list.append(route)\n",
    "    return route_list\n",
    "\n",
    "def splitRoutes(node_id_list,model):\n",
    "    depot=model.depot_id_list[0]\n",
    "    V={id:float('inf') for id in model.demand_id_list}\n",
    "    V[depot]=0\n",
    "    Pred={id:depot for id in model.demand_id_list}\n",
    "    for i in range(len(node_id_list)):\n",
    "        n_1=node_id_list[i]\n",
    "        demand=0\n",
    "        departure=0\n",
    "        j=i\n",
    "        cost=0\n",
    "        while True:\n",
    "            n_2 = node_id_list[j]\n",
    "            demand = demand + model.demand_dict[n_2].demand\n",
    "            if n_1 == n_2:\n",
    "                arrival= max(model.demand_dict[n_2].start_time,model.depot_dict[depot].start_time+model.time_matrix[depot,n_2])\n",
    "                departure=arrival+model.demand_dict[n_2].service_time\n",
    "                if model.opt_type == 0:\n",
    "                    cost=model.distance_matrix[depot,n_2]*2\n",
    "                else:\n",
    "                    cost=model.time_matrix[depot,n_2]*2\n",
    "            else:\n",
    "                n_3=node_id_list[j-1]\n",
    "                arrival= max(departure+model.time_matrix[n_3,n_2],model.demand_dict[n_2].start_time)\n",
    "                departure=arrival+model.demand_dict[n_2].service_time\n",
    "                if model.opt_type == 0:\n",
    "                    cost=cost-model.distance_matrix[n_3,depot]+model.distance_matrix[n_3,n_2]+model.distance_matrix[n_2,depot]\n",
    "                else:\n",
    "                    cost = cost - model.time_matrix[n_3, depot] + model.time_matrix[n_3, n_2] \\\n",
    "                           + max(model.demand_dict[n_2].start_time - arrival, 0) + model.time_matrix[n_2, depot]\n",
    "            if demand<=model.vehicle_cap and departure <= model.demand_dict[n_2].end_time:\n",
    "                if departure+model.time_matrix[n_2,depot] <= model.depot_dict[depot].end_time:\n",
    "                    n_4=node_id_list[i-1] if i-1>=0 else depot\n",
    "                    if V[n_4]+cost <= V[n_2]:\n",
    "                        V[n_2]=V[n_4]+cost\n",
    "                        Pred[n_2]=i-1\n",
    "                    j=j+1\n",
    "            else:\n",
    "                break\n",
    "            if j==len(node_id_list):\n",
    "                break\n",
    "    route_list= extractRoutes(node_id_list,Pred,model)\n",
    "    return len(route_list),route_list\n",
    "\n",
    "def calObj(sol,model):\n",
    "\n",
    "    node_id_list=copy.deepcopy(sol.node_id_list)\n",
    "    num_vehicle, sol.route_list = splitRoutes(node_id_list, model)\n",
    "    # travel cost\n",
    "    sol.timetable_list,sol.cost_of_time,sol.cost_of_distance =calTravelCost(sol.route_list,model)\n",
    "    if model.opt_type == 0:\n",
    "        sol.obj=sol.cost_of_distance\n",
    "    else:\n",
    "        sol.obj=sol.cost_of_time\n",
    "\n",
    "def genInitialSol(node_id_list):\n",
    "    node_id_list=copy.deepcopy(node_id_list)\n",
    "    random.seed(0)\n",
    "    random.shuffle(node_id_list)\n",
    "    return node_id_list\n",
    "\n",
    "def createRandomDestory(model):\n",
    "    d=random.uniform(model.rand_d_min,model.rand_d_max)\n",
    "    reomve_list=random.sample(range(len(model.demand_id_list)),int(d*len(model.demand_id_list)))\n",
    "    return reomve_list\n",
    "\n",
    "def createWorseDestory(model,sol):\n",
    "    deta_f=[]\n",
    "    for node_id in sol.node_id_list:\n",
    "        sol_=copy.deepcopy(sol)\n",
    "        sol_.node_id_list.remove(node_id)\n",
    "        calObj(sol_,model)\n",
    "        deta_f.append(sol.obj-sol_.obj)\n",
    "    sorted_id = sorted(range(len(deta_f)), key=lambda k: deta_f[k], reverse=True)\n",
    "    d=random.randint(model.worst_d_min,model.worst_d_max)\n",
    "    remove_list=sorted_id[:d]\n",
    "    return remove_list\n",
    "\n",
    "def createRandomRepair(remove_list,model,sol):\n",
    "    unassigned_nodes_id=[]\n",
    "    assigned_nodes_id = []\n",
    "    # remove node from current solution\n",
    "    for i in range(len(model.demand_id_list)):\n",
    "        if i in remove_list:\n",
    "            unassigned_nodes_id.append(sol.node_id_list[i])\n",
    "        else:\n",
    "            assigned_nodes_id.append(sol.node_id_list[i])\n",
    "    # insert\n",
    "    for node_id in unassigned_nodes_id:\n",
    "        index=random.randint(0,len(assigned_nodes_id)-1)\n",
    "        assigned_nodes_id.insert(index,node_id)\n",
    "    new_sol=Sol()\n",
    "    new_sol.node_id_list=copy.deepcopy(assigned_nodes_id)\n",
    "    calObj(new_sol,model)\n",
    "    return new_sol\n",
    "\n",
    "def findGreedyInsert(unassigned_nodes_id,assigned_nodes_id,model):\n",
    "    best_insert_node_id=None\n",
    "    best_insert_index = None\n",
    "    best_insert_cost = float('inf')\n",
    "    sol_1=Sol()\n",
    "    sol_1.node_id_list=assigned_nodes_id\n",
    "    calObj(sol_1,model)\n",
    "    for node_id in unassigned_nodes_id:\n",
    "        for i in range(len(assigned_nodes_id)):\n",
    "            sol_2=Sol()\n",
    "            sol_2.node_id_list=copy.deepcopy(assigned_nodes_id)\n",
    "            sol_2.node_id_list.insert(i, node_id)\n",
    "            calObj(sol_2, model)\n",
    "            deta_f = sol_2.obj -sol_1.obj\n",
    "            if deta_f<best_insert_cost:\n",
    "                best_insert_index=i\n",
    "                best_insert_node_id=node_id\n",
    "                best_insert_cost=deta_f\n",
    "    return best_insert_node_id,best_insert_index\n",
    "\n",
    "def createGreedyRepair(remove_list,model,sol):\n",
    "    unassigned_nodes_id = []\n",
    "    assigned_nodes_id = []\n",
    "    # remove node from current solution\n",
    "    for i in range(len(model.demand_id_list)):\n",
    "        if i in remove_list:\n",
    "            unassigned_nodes_id.append(sol.node_id_list[i])\n",
    "        else:\n",
    "            assigned_nodes_id.append(sol.node_id_list[i])\n",
    "    #insert\n",
    "    while len(unassigned_nodes_id)>0:\n",
    "        insert_node_id,insert_index=findGreedyInsert(unassigned_nodes_id,assigned_nodes_id,model)\n",
    "        assigned_nodes_id.insert(insert_index,insert_node_id)\n",
    "        unassigned_nodes_id.remove(insert_node_id)\n",
    "    new_sol=Sol()\n",
    "    new_sol.node_id_list=copy.deepcopy(assigned_nodes_id)\n",
    "    calObj(new_sol,model)\n",
    "    return new_sol\n",
    "\n",
    "def findRegretInsert(unassigned_nodes_id,assigned_nodes_id,model):\n",
    "    opt_insert_node_id = None\n",
    "    opt_insert_index = None\n",
    "    opt_insert_cost = -float('inf')\n",
    "    sol_=Sol()\n",
    "    for node_id in unassigned_nodes_id:\n",
    "        n_insert_cost=np.zeros((len(assigned_nodes_id),3))\n",
    "        for i in range(len(assigned_nodes_id)):\n",
    "            sol_.node_id_list=copy.deepcopy(assigned_nodes_id)\n",
    "            sol_.node_id_list.insert(i,node_id)\n",
    "            calObj(sol_,model)\n",
    "            n_insert_cost[i,0]=node_id\n",
    "            n_insert_cost[i,1]=i\n",
    "            n_insert_cost[i,2]=sol_.obj\n",
    "        n_insert_cost= n_insert_cost[n_insert_cost[:, 2].argsort()]\n",
    "        deta_f=0\n",
    "        for i in range(1,model.regret_n):\n",
    "            deta_f=deta_f+n_insert_cost[i,2]-n_insert_cost[0,2]\n",
    "        if deta_f>opt_insert_cost:\n",
    "            opt_insert_node_id = int(n_insert_cost[0, 0])\n",
    "            opt_insert_index=int(n_insert_cost[0,1])\n",
    "            opt_insert_cost=deta_f\n",
    "    return opt_insert_node_id,opt_insert_index\n",
    "\n",
    "def createRegretRepair(remove_list,model,sol):\n",
    "    unassigned_nodes_id = []\n",
    "    assigned_nodes_id = []\n",
    "    # remove node from current solution\n",
    "    for i in range(len(model.demand_id_list)):\n",
    "        if i in remove_list:\n",
    "            unassigned_nodes_id.append(sol.node_id_list[i])\n",
    "        else:\n",
    "            assigned_nodes_id.append(sol.node_id_list[i])\n",
    "    # insert\n",
    "    while len(unassigned_nodes_id)>0:\n",
    "        insert_node_id,insert_index=findRegretInsert(unassigned_nodes_id,assigned_nodes_id,model)\n",
    "        assigned_nodes_id.insert(insert_index,insert_node_id)\n",
    "        unassigned_nodes_id.remove(insert_node_id)\n",
    "    new_sol = Sol()\n",
    "    new_sol.node_id_list = copy.deepcopy(assigned_nodes_id)\n",
    "    calObj(new_sol, model)\n",
    "    return new_sol\n",
    "\n",
    "def selectDestoryRepair(model):\n",
    "    d_weight=model.d_weight\n",
    "    d_cumsumprob = (d_weight / sum(d_weight)).cumsum()\n",
    "    d_cumsumprob -= np.random.rand()\n",
    "    destory_id= list(d_cumsumprob > 0).index(True)\n",
    "\n",
    "    r_weight=model.r_weight\n",
    "    r_cumsumprob = (r_weight / sum(r_weight)).cumsum()\n",
    "    r_cumsumprob -= np.random.rand()\n",
    "    repair_id = list(r_cumsumprob > 0).index(True)\n",
    "    return destory_id,repair_id\n",
    "\n",
    "def doDestory(destory_id,model,sol):\n",
    "    if destory_id==0:\n",
    "        reomve_list=createRandomDestory(model)\n",
    "    else:\n",
    "        reomve_list=createWorseDestory(model,sol)\n",
    "    return reomve_list\n",
    "\n",
    "def doRepair(repair_id,reomve_list,model,sol):\n",
    "    if repair_id==0:\n",
    "        new_sol=createRandomRepair(reomve_list,model,sol)\n",
    "    elif repair_id==1:\n",
    "        new_sol=createGreedyRepair(reomve_list,model,sol)\n",
    "    else:\n",
    "        new_sol=createRegretRepair(reomve_list,model,sol)\n",
    "    return new_sol\n",
    "\n",
    "def resetScore(model):\n",
    "\n",
    "    model.d_select = np.zeros(2)\n",
    "    model.d_score = np.zeros(2)\n",
    "\n",
    "    model.r_select = np.zeros(3)\n",
    "    model.r_score = np.zeros(3)\n",
    "\n",
    "def updateWeight(model):\n",
    "\n",
    "    for i in range(model.d_weight.shape[0]):\n",
    "        if model.d_select[i]>0:\n",
    "            model.d_weight[i]=model.d_weight[i]*(1-model.rho)+model.rho*model.d_score[i]/model.d_select[i]\n",
    "        else:\n",
    "            model.d_weight[i] = model.d_weight[i] * (1 - model.rho)\n",
    "    for i in range(model.r_weight.shape[0]):\n",
    "        if model.r_select[i]>0:\n",
    "            model.r_weight[i]=model.r_weight[i]*(1-model.rho)+model.rho*model.r_score[i]/model.r_select[i]\n",
    "        else:\n",
    "            model.r_weight[i] = model.r_weight[i] * (1 - model.rho)\n",
    "    model.d_history_select = model.d_history_select + model.d_select\n",
    "    model.d_history_score = model.d_history_score + model.d_score\n",
    "    model.r_history_select = model.r_history_select + model.r_select\n",
    "    model.r_history_score = model.r_history_score + model.r_score\n",
    "\n",
    "   \n",
    "\n",
    "def plotObj(obj_list):\n",
    "    plt.rcParams['font.sans-serif'] = ['SimHei'] #show chinese\n",
    "    plt.rcParams['axes.unicode_minus'] = False  # Show minus sign\n",
    "    plt.plot(np.arange(1,len(obj_list)+1),obj_list)\n",
    "    plt.xlabel('Iterations')\n",
    "    plt.ylabel('Obj Value')\n",
    "    plt.grid()\n",
    "    plt.xlim(1,len(obj_list)+1)\n",
    "    plt.show()\n",
    "\n",
    "def outPut(model):\n",
    "    work=xlsxwriter.Workbook('result.xlsx')\n",
    "    worksheet=work.add_worksheet()\n",
    "    worksheet.write(0, 0, 'cost_of_time')\n",
    "    worksheet.write(0, 1, 'cost_of_distance')\n",
    "    worksheet.write(0, 2, 'opt_type')\n",
    "    worksheet.write(0, 3, 'obj')\n",
    "    worksheet.write(1,0,model.best_sol.cost_of_time)\n",
    "    worksheet.write(1,1,model.best_sol.cost_of_distance)\n",
    "    worksheet.write(1,2,model.opt_type)\n",
    "    worksheet.write(1,3,model.best_sol.obj)\n",
    "    worksheet.write(2,0,'vehicleID')\n",
    "    worksheet.write(2,1,'route')\n",
    "    worksheet.write(2,2,'timetable')\n",
    "    for row,route in enumerate(model.best_sol.route_list):\n",
    "        worksheet.write(row+3,0,'v'+str(row+1))\n",
    "        r=[str(i)for i in route]\n",
    "        worksheet.write(row+3,1, '-'.join(r))\n",
    "        r=[str(i)for i in model.best_sol.timetable_list[row]]\n",
    "        worksheet.write(row+3,2, '-'.join(r))\n",
    "    work.close()\n",
    "\n",
    "def plotRoutes(model):\n",
    "    for route in model.best_sol.route_list:\n",
    "        x_coord=[model.depot_dict[route[0]].x_coord]\n",
    "        y_coord=[model.depot_dict[route[0]].y_coord]\n",
    "        for node_id in route[1:-1]:\n",
    "            x_coord.append(model.demand_dict[node_id].x_coord)\n",
    "            y_coord.append(model.demand_dict[node_id].y_coord)\n",
    "        x_coord.append(model.depot_dict[route[-1]].x_coord)\n",
    "        y_coord.append(model.depot_dict[route[-1]].y_coord)\n",
    "        plt.grid()\n",
    "        if route[0]=='d1':\n",
    "            plt.plot(x_coord,y_coord,marker='o',color='black',linewidth=0.5,markersize=5)\n",
    "        elif route[0]=='d2':\n",
    "            plt.plot(x_coord,y_coord,marker='o',color='orange',linewidth=0.5,markersize=5)\n",
    "        else:\n",
    "            plt.plot(x_coord,y_coord,marker='o',color='b',linewidth=0.5,markersize=5)\n",
    "    plt.xlabel('x_coord')\n",
    "    plt.ylabel('y_coord')\n",
    "    plt.show()\n",
    "\n",
    "def run(demand_file,depot_file,rand_d_max,rand_d_min,worst_d_min,worst_d_max,regret_n,r1,r2,r3,rho,phi,epochs,pu,v_cap,\n",
    "        v_speed,opt_type):\n",
    "    \"\"\"\n",
    "    :param demand_file: demand file path\n",
    "    :param depot_file: depot file path\n",
    "    :param rand_d_max: max degree of random destruction\n",
    "    :param rand_d_min: min degree of random destruction\n",
    "    :param worst_d_max: max degree of worst destruction\n",
    "    :param worst_d_min: min degree of worst destruction\n",
    "    :param regret_n:  n next cheapest insertions\n",
    "    :param r1: score if the new solution is the best one found so far.\n",
    "    :param r2: score if the new solution improves the current solution.\n",
    "    :param r3: score if the new solution does not improve the current solution, but is accepted.\n",
    "    :param rho: reaction factor of action weight\n",
    "    :param phi: the reduction factor of threshold\n",
    "    :param epochs: Iterations\n",
    "    :param pu: the frequency of weight adjustment\n",
    "    :param v_cap: Vehicle capacity\n",
    "    :param v_speed Vehicle free speed\n",
    "    :param opt_type: Optimization type:0:Minimize the number of vehicles,1:Minimize travel distance\n",
    "    :return:\n",
    "    \"\"\"\n",
    "    model=Model()\n",
    "    model.rand_d_max=rand_d_max\n",
    "    model.rand_d_min=rand_d_min\n",
    "    model.worst_d_min=worst_d_min\n",
    "    model.worst_d_max=worst_d_max\n",
    "    model.regret_n=regret_n\n",
    "    model.r1=r1\n",
    "    model.r2=r2\n",
    "    model.r3=r3\n",
    "    model.rho=rho\n",
    "    model.vehicle_cap=v_cap\n",
    "    model.opt_type=opt_type\n",
    "    model.vehicle_speed=v_speed\n",
    "    readCSVFile(demand_file,depot_file, model)\n",
    "    calDistanceTimeMatrix(model)\n",
    "    history_best_obj = []\n",
    "    sol = Sol()\n",
    "    sol.node_id_list = genInitialSol(model.demand_id_list)\n",
    "    calObj(sol, model)\n",
    "    model.best_sol = copy.deepcopy(sol)\n",
    "    history_best_obj.append(sol.obj)\n",
    "    for ep in range(epochs):\n",
    "        T=sol.obj*0.2\n",
    "        resetScore(model)\n",
    "        for k in range(pu):\n",
    "            destory_id,repair_id=selectDestoryRepair(model)\n",
    "            model.d_select[destory_id]+=1\n",
    "            model.r_select[repair_id]+=1\n",
    "            reomve_list=doDestory(destory_id,model,sol)\n",
    "            new_sol=doRepair(repair_id,reomve_list,model,sol)\n",
    "            if new_sol.obj<sol.obj:\n",
    "                sol=copy.deepcopy(new_sol)\n",
    "                if new_sol.obj<model.best_sol.obj:\n",
    "                    model.best_sol=copy.deepcopy(new_sol)\n",
    "                    model.d_score[destory_id]+=model.r1\n",
    "                    model.r_score[repair_id]+=model.r1\n",
    "                else:\n",
    "                    model.d_score[destory_id]+=model.r2\n",
    "                    model.r_score[repair_id]+=model.r2\n",
    "            elif new_sol.obj-sol.obj<T:\n",
    "                sol=copy.deepcopy(new_sol)\n",
    "                model.d_score[destory_id] += model.r3\n",
    "                model.r_score[repair_id] += model.r3\n",
    "            T=T*phi\n",
    "            print(\"%s/%s:%s/%s， best obj: %s\" % (ep,epochs,k,pu, model.best_sol.obj))\n",
    "            history_best_obj.append(model.best_sol.obj)\n",
    "        updateWeight(model)\n",
    "\n",
    "    plotObj(history_best_obj)\n",
    "    plotRoutes(model)\n",
    "    outPut(model)\n",
    "    print(\"random destory weight is {:.3f}\\tselect is {}\\tscore is {:.3f}\".format(model.d_weight[0],\n",
    "                                                                        model.d_history_select[0],\n",
    "                                                                        model.d_history_score[0]))\n",
    "    print(\"worse destory weight is {:.3f}\\tselect is {}\\tscore is {:.3f} \".format(model.d_weight[1],\n",
    "                                                                        model.d_history_select[1],\n",
    "                                                                        model.d_history_score[1]))\n",
    "    print(\"random repair weight is {:.3f}\\tselect is {}\\tscore is {:.3f}\".format(model.r_weight[0],\n",
    "                                                                       model.r_history_select[0],\n",
    "                                                                       model.r_history_score[0]))\n",
    "    print(\"greedy repair weight is {:.3f}\\tselect is {}\\tscore is {:.3f}\".format(model.r_weight[1],\n",
    "                                                                       model.r_history_select[1],\n",
    "                                                                       model.r_history_score[1]))\n",
    "    print(\"regret repair weight is {:.3f}\\tselect is {}\\tscore is {:.3f}\".format(model.r_weight[2],\n",
    "                                                                       model.r_history_select[2],\n",
    "                                                                       model.r_history_score[2]))\n",
    "\n",
    "if __name__=='__main__':\n",
    "        demand_file=r'demand.csv'\n",
    "        depot_file=r'depot.csv'\n",
    "        run(demand_file=demand_file,depot_file=depot_file,rand_d_max=0.4,rand_d_min=0.1,\n",
    "        worst_d_min=5,worst_d_max=20,regret_n=5,r1=30,r2=20,r3=10,rho=0.5,\n",
    "        phi=0.9,epochs = 200,pu = 4,v_cap=80,v_speed=0.5,opt_type=1)\n",
    "print(\"The time used to execute this is given below\")\n",
    "end = time.time()\n",
    "\n",
    "print(end - start)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c3944431",
   "metadata": {},
   "source": [
    "# 算法思路\n",
    "### 背景\n",
    "- 参数\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dcd3859d",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
